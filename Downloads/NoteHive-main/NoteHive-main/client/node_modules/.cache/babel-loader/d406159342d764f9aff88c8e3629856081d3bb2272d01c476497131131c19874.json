{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vedan\\\\Downloads\\\\NoteHive-main\\\\NoteHive-main\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"../css/Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  setUsername,\n  setEmail\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [otp, setOtp] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [step, setStep] = useState(1); // Step 1: Initial form, Step 2: OTP verification\n\n  // Handle input changes and update formData state\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle OTP input change\n  const handleOtpChange = e => {\n    setOtp(e.target.value);\n  };\n\n  // Step 1: Initiate registration and request OTP\n  const initiateRegistration = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/initiate-registration\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      console.log(\"Registration Initiation Response:\", data);\n      if (response.ok) {\n        setStep(2); // Move to OTP verification step\n        setMessage(\"OTP sent to your email. Please check and enter below.\");\n      } else {\n        setMessage(data.message || \"Registration initiation failed. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Registration Initiation Error:\", error);\n      setMessage(\"Server error. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Step 2: Verify OTP and complete registration\n  const verifyOtp = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/verify-registration\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          otp\n        })\n      });\n      const data = await response.json();\n      console.log(\"OTP Verification Response:\", data);\n      if (response.ok) {\n        // Clear previous user data from localStorage\n        localStorage.removeItem(\"username\");\n        localStorage.removeItem(\"email\");\n        localStorage.removeItem(\"bio\");\n        localStorage.removeItem(\"profilePic\");\n        localStorage.removeItem(\"phone\");\n        localStorage.removeItem(\"location\");\n\n        // Store new user data in localStorage\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", formData.email);\n\n        // Update global state if functions are provided\n        if (setUsername) setUsername(data.username);\n        if (setEmail) setEmail(formData.email);\n        setMessage(\"Registration successful! Redirecting...\");\n        setTimeout(() => {\n          navigate(\"/profile\"); // Redirect to profile or home page\n          // Optionally, remove the following line if you don't want a full page reload.\n          window.location.reload();\n        }, 1500);\n      } else {\n        setMessage(data.message || \"OTP verification failed. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"OTP Verification Error:\", error);\n      setMessage(\"Server error. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Request OTP resend\n  const resendOtp = async () => {\n    setIsLoading(true);\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/resend-otp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          purpose: \"registration\"\n        })\n      });\n      const data = await response.json();\n      console.log(\"Resend OTP Response:\", data);\n      if (response.ok) {\n        setMessage(\"OTP resent to your email. Please check and enter below.\");\n      } else {\n        setMessage(data.message || \"Failed to resend OTP. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Resend OTP Error:\", error);\n      setMessage(\"Server error. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Close the registration form and navigate to home\n  const handleClose = () => {\n    navigate(\"/\");\n  };\n\n  // Go back to step 1\n  const handleBack = () => {\n    setStep(1);\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-btn\",\n      onClick: handleClose,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), step === 1 ?\n    /*#__PURE__*/\n    // Step 1: Initial registration form\n    _jsxDEV(\"form\", {\n      onSubmit: initiateRegistration,\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        disabled: isLoading,\n        children: isLoading ? \"Sending OTP...\" : \"Get OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Step 2: OTP verification form\n    _jsxDEV(\"form\", {\n      onSubmit: verifyOtp,\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"otp-info\",\n        children: [\"We've sent a verification code to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: formData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"otp\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: handleOtpChange,\n          required: true,\n          maxLength: 6,\n          className: \"otp-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        disabled: isLoading,\n        children: isLoading ? \"Verifying...\" : \"Verify & Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"text-btn\",\n          onClick: resendOtp,\n          disabled: isLoading,\n          children: \"Resend OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"text-btn\",\n          onClick: handleBack,\n          disabled: isLoading,\n          children: \"Change Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: message.includes(\"success\") || message.includes(\"sent\") ? \"success\" : \"error\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"87qUx+dPjo+1rrLmg8EwzVdAJx4=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","Link","jsxDEV","_jsxDEV","Register","setUsername","setEmail","_s","navigate","formData","setFormData","username","email","password","otp","setOtp","message","setMessage","isLoading","setIsLoading","step","setStep","handleChange","e","target","name","value","handleOtpChange","initiateRegistration","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","error","verifyOtp","localStorage","removeItem","setItem","setTimeout","window","location","reload","resendOtp","purpose","handleClose","handleBack","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","maxLength","includes","to","_c","$RefreshReg$"],"sources":["C:/Users/vedan/Downloads/NoteHive-main/NoteHive-main/client/src/pages/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"../css/Register.css\";\n\nconst Register = ({ setUsername, setEmail }) => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({ username: \"\", email: \"\", password: \"\" });\n  const [otp, setOtp] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [step, setStep] = useState(1); // Step 1: Initial form, Step 2: OTP verification\n\n  // Handle input changes and update formData state\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  // Handle OTP input change\n  const handleOtpChange = (e) => {\n    setOtp(e.target.value);\n  };\n\n  // Step 1: Initiate registration and request OTP\n  const initiateRegistration = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/initiate-registration\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n      console.log(\"Registration Initiation Response:\", data);\n\n      if (response.ok) {\n        setStep(2); // Move to OTP verification step\n        setMessage(\"OTP sent to your email. Please check and enter below.\");\n      } else {\n        setMessage(data.message || \"Registration initiation failed. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Registration Initiation Error:\", error);\n      setMessage(\"Server error. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Step 2: Verify OTP and complete registration\n  const verifyOtp = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/verify-registration\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email: formData.email, otp }),\n      });\n\n      const data = await response.json();\n      console.log(\"OTP Verification Response:\", data);\n\n      if (response.ok) {\n        // Clear previous user data from localStorage\n        localStorage.removeItem(\"username\");\n        localStorage.removeItem(\"email\");\n        localStorage.removeItem(\"bio\");\n        localStorage.removeItem(\"profilePic\");\n        localStorage.removeItem(\"phone\");\n        localStorage.removeItem(\"location\");\n\n        // Store new user data in localStorage\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", formData.email);\n\n        // Update global state if functions are provided\n        if (setUsername) setUsername(data.username);\n        if (setEmail) setEmail(formData.email);\n\n        setMessage(\"Registration successful! Redirecting...\");\n\n        setTimeout(() => {\n          navigate(\"/profile\");  // Redirect to profile or home page\n          // Optionally, remove the following line if you don't want a full page reload.\n          window.location.reload();\n        }, 1500);\n      } else {\n        setMessage(data.message || \"OTP verification failed. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"OTP Verification Error:\", error);\n      setMessage(\"Server error. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Request OTP resend\n  const resendOtp = async () => {\n    setIsLoading(true);\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/resend-otp\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email: formData.email, purpose: \"registration\" }),\n      });\n\n      const data = await response.json();\n      console.log(\"Resend OTP Response:\", data);\n\n      if (response.ok) {\n        setMessage(\"OTP resent to your email. Please check and enter below.\");\n      } else {\n        setMessage(data.message || \"Failed to resend OTP. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Resend OTP Error:\", error);\n      setMessage(\"Server error. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Close the registration form and navigate to home\n  const handleClose = () => {\n    navigate(\"/\");\n  };\n\n  // Go back to step 1\n  const handleBack = () => {\n    setStep(1);\n    setMessage(\"\");\n  };\n\n  return (\n    <div className=\"register-form-container\">\n      <button className=\"close-btn\" onClick={handleClose}>X</button>\n      <h2>Register</h2>\n      \n      {step === 1 ? (\n        // Step 1: Initial registration form\n        <form onSubmit={initiateRegistration} className=\"register-form\">\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              value={formData.username}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={formData.email}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"submit-btn\" disabled={isLoading}>\n            {isLoading ? \"Sending OTP...\" : \"Get OTP\"}\n          </button>\n        </form>\n      ) : (\n        // Step 2: OTP verification form\n        <form onSubmit={verifyOtp} className=\"register-form\">\n          <p className=\"otp-info\">\n            We've sent a verification code to <strong>{formData.email}</strong>\n          </p>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              name=\"otp\"\n              placeholder=\"Enter OTP\"\n              value={otp}\n              onChange={handleOtpChange}\n              required\n              maxLength={6}\n              className=\"otp-input\"\n            />\n          </div>\n          <button type=\"submit\" className=\"submit-btn\" disabled={isLoading}>\n            {isLoading ? \"Verifying...\" : \"Verify & Register\"}\n          </button>\n          <div className=\"otp-actions\">\n            <button \n              type=\"button\" \n              className=\"text-btn\" \n              onClick={resendOtp} \n              disabled={isLoading}\n            >\n              Resend OTP\n            </button>\n            <button \n              type=\"button\" \n              className=\"text-btn\" \n              onClick={handleBack}\n              disabled={isLoading}\n            >\n              Change Email\n            </button>\n          </div>\n        </form>\n      )}\n      \n      {message && (\n        <p className={message.includes(\"success\") || message.includes(\"sent\") ? \"success\" : \"error\"}>\n          {message}\n        </p>\n      )}\n      \n      {step === 1 && (\n        <p>\n          Already have an account? <Link to=\"/login\">Login</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}