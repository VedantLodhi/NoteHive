{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n// import Dashboard1 from \"./components/Dashboard1\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import Notes from \"./pages/Notes\";\n// import Profile from \"./components/Profile\";\n// import Login from \"./pages/Login\";\n// import Register from \"./pages/Register\";\n// // import ProfileCreation from \"./components/ProfileCreation\";\n// import NoteDetails from \"./components/NoteDetails\";\n// import FAQ from \"./components/FAQ\";\n// import AdminPanel from \"./components/AdminPanel\";\n// import PrivateRoute from \"./components/PrivateRoute\";\n// import ProtectedRoute from \"./components/ProtectedRoute\";\n// import NoteManager from \"./pages/NoteManager\";\n// import CPTrivia from \"./pages/CPTrivia\";\n// const App = () => {\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n//   const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n//   const [notes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n//   useEffect(() => {\n//     const handleStorageChange = () => {\n//       setUsername(localStorage.getItem(\"username\") || null);\n//       setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n//     };\n\n//     handleStorageChange();\n//     window.addEventListener(\"storage\", handleStorageChange);\n\n//     return () => {\n//       window.removeEventListener(\"storage\", handleStorageChange);\n//     };\n//   }, []);\n\n//   return (\n//     <Router>\n//       <AppRoutes username={username} setUsername={setUsername} isAdmin={isAdmin} notes={notes} />\n//     </Router>\n//   );\n// };\n\n// const AppRoutes = ({ username, setUsername, isAdmin, notes }) => {\n//   const location = useLocation();\n\n//   return (\n//     <>\n//       <Routes>\n//         {/* Public Routes */}\n//         <Route path=\"/\" element={<Dashboard1 username={username} setUsername={setUsername} />}>\n//           <Route index element={<Home />} />\n//           <Route path=\"about\" element={<About />} />\n//           <Route path=\"notes\" element={<Notes notes={notes} />} />\n//           <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n//           <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n//           <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n//           <Route path=\"cp-trivia\" element={<CPTrivia/>}/>\n\n//         </Route>\n\n//         {/* Protected Routes (Requires Login) */}\n//         <Route element={<ProtectedRoute username={username} />}>\n//           <Route path=\"profile\" element={<Profile />} />\n//           {/* <Route path=\"create-profile\" element={<ProfileCreation />} /> */}\n//         </Route>\n\n//         {/* Admin Panel (No note management) */}\n//         <Route path=\"/admin\" element={<PrivateRoute><AdminPanel /></PrivateRoute>} />\n//         <Route path=\"/admin/noteManager\" element={<NoteManager />} />\n//         {/* Redirect unknown routes */}\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n\n//       {/* Show FAQ only on the Home page */}\n//       {location.pathname === \"/\" && <FAQ />}\n//     </>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/Anshi/Desktop/NoteHive-main/client/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n// import Dashboard1 from \"./components/Dashboard1\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import Notes from \"./pages/Notes\";\n// import Profile from \"./components/Profile\";\n// import Login from \"./pages/Login\";\n// import Register from \"./pages/Register\";\n// // import ProfileCreation from \"./components/ProfileCreation\";\n// import NoteDetails from \"./components/NoteDetails\";\n// import FAQ from \"./components/FAQ\";\n// import AdminPanel from \"./components/AdminPanel\";\n// import PrivateRoute from \"./components/PrivateRoute\";\n// import ProtectedRoute from \"./components/ProtectedRoute\";\n// import NoteManager from \"./pages/NoteManager\";\n// import CPTrivia from \"./pages/CPTrivia\";\n// const App = () => {\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n//   const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n//   const [notes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n//   useEffect(() => {\n//     const handleStorageChange = () => {\n//       setUsername(localStorage.getItem(\"username\") || null);\n//       setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n//     };\n  \n//     handleStorageChange();\n//     window.addEventListener(\"storage\", handleStorageChange);\n  \n//     return () => {\n//       window.removeEventListener(\"storage\", handleStorageChange);\n//     };\n//   }, []);\n\n//   return (\n//     <Router>\n//       <AppRoutes username={username} setUsername={setUsername} isAdmin={isAdmin} notes={notes} />\n//     </Router>\n//   );\n// };\n\n// const AppRoutes = ({ username, setUsername, isAdmin, notes }) => {\n//   const location = useLocation();\n\n//   return (\n//     <>\n//       <Routes>\n//         {/* Public Routes */}\n//         <Route path=\"/\" element={<Dashboard1 username={username} setUsername={setUsername} />}>\n//           <Route index element={<Home />} />\n//           <Route path=\"about\" element={<About />} />\n//           <Route path=\"notes\" element={<Notes notes={notes} />} />\n//           <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n//           <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n//           <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n//           <Route path=\"cp-trivia\" element={<CPTrivia/>}/>\n\n//         </Route>\n\n//         {/* Protected Routes (Requires Login) */}\n//         <Route element={<ProtectedRoute username={username} />}>\n//           <Route path=\"profile\" element={<Profile />} />\n//           {/* <Route path=\"create-profile\" element={<ProfileCreation />} /> */}\n//         </Route>\n\n//         {/* Admin Panel (No note management) */}\n//         <Route path=\"/admin\" element={<PrivateRoute><AdminPanel /></PrivateRoute>} />\n//         <Route path=\"/admin/noteManager\" element={<NoteManager />} />\n//         {/* Redirect unknown routes */}\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n\n//       {/* Show FAQ only on the Home page */}\n//       {location.pathname === \"/\" && <FAQ />}\n//     </>\n//   );\n// };\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}