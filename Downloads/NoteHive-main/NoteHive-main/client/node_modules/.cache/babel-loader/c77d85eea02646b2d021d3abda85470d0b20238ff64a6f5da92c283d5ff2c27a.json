{"ast":null,"code":"// // import React, { useState, useEffect } from \"react\";\n// // import { Link, Outlet, useNavigate } from \"react-router-dom\";\n// // import { FaUserCircle, FaBars, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\n// // import '../css/Dashboard.css';\n\n// // const Dashboard1 = () => {\n// //   const [menuOpen, setMenuOpen] = useState(false);\n// //   const [darkMode, setDarkMode] = useState(() => localStorage.getItem(\"darkMode\") === \"true\");\n// //   const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n// //   const [role, setRole] = useState(\"\"); // Start with an empty role\n// //   const [profilePic, setProfilePic] = useState(localStorage.getItem(\"profilePic\") || \"https://via.placeholder.com/150\");\n\n// //   const navigate = useNavigate();\n\n// //   // Get role when component mounts\n// //   useEffect(() => {\n// //     const storedRole = localStorage.getItem(\"role\")?.trim().toLowerCase();\n// //     setRole(storedRole || \"\"); // Ensure a valid role is set\n// //   }, []);\n\n// //   // Sync dark mode state\n// //   useEffect(() => {\n// //     document.body.classList.toggle(\"dark-mode\", darkMode);\n// //     localStorage.setItem(\"darkMode\", darkMode);\n// //   }, [darkMode]);\n\n// //   const toggleMenu = () => setMenuOpen(!menuOpen);\n// //   const toggleDarkMode = () => setDarkMode((prev) => !prev);\n\n// //   const handleLogout = () => {\n// //     localStorage.removeItem(\"username\");\n// //     localStorage.removeItem(\"role\"); // Remove role\n// //     localStorage.removeItem(\"token\");\n// //     localStorage.removeItem(\"profilePic\"); // Clear profile picture\n// //     setUsername(\"\");\n// //     setRole(\"\"); // Clear role immediately\n// //     setProfilePic(\"https://via.placeholder.com/150\"); // Reset profile picture to default\n// //     navigate(\"/login\");\n// //     window.location.reload();\n// //   };\n\n// //   return (\n// //     <div className={`dashboard-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n// //       <header className=\"taskbar\">\n// //         <div className=\"taskbar-logo\">\n// //           <h1>NoteHive</h1>\n// //         </div>\n\n// //         <nav className={`taskbar-nav ${menuOpen ? \"open\" : \"\"}`}>\n// //           <ul>\n// //             <li><Link to=\"/\">Home</Link></li>\n// //             <li><Link to=\"about\">About</Link></li>\n// //             <li><Link to=\"notes\">Notes</Link></li>\n// //             <li><Link to=\"cp-trivia\">Trivia & Quizzes</Link></li>\n\n// //             {/* Only show Admin Panel for users with role \"admin\" */}\n// //             {role === \"admin\" && (\n// //               <>\n// //                 <li><Link to=\"/admin\">Admin Panel</Link></li>\n// //                 <li><Link to=\"/admin/noteManager\">Note Manager</Link></li>\n// //               </>\n// //             )}\n// //             {username ? (\n// //               <li className=\"profile-dropdown\">\n// //                 <span className=\"profile-trigger\">\n// //                   {/* Display profile picture or default icon */}\n// //                   <img\n// //                     src={profilePic} \n// //                     alt=\"Profile\"\n// //                     className=\"profile-icon\"\n// //                     style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\n// //                   />\n// //                   {username}\n// //                 </span>\n// //                 <ul className=\"dropdown-menu\">\n// //                   <li onClick={() => navigate(\"/profile\")}>Profile</li>\n// //                   <li onClick={() => navigate(\"/settings\")}>Settings</li>\n// //                   <li onClick={handleLogout}>Logout</li>\n// //                 </ul>\n// //               </li>\n// //             ) : (\n// //               <>\n// //                 <li><Link to=\"login\">Login</Link></li>\n// //                 <li><Link to=\"register\">Sign Up</Link></li>\n// //               </>\n// //             )}\n\n// //             {/* Dark mode toggle */}\n// //             <li className=\"dark-mode-toggle\" onClick={toggleDarkMode}>\n// //               {darkMode ? <FaSun /> : <FaMoon />}\n// //             </li>\n// //           </ul>\n// //         </nav>\n\n// //         {/* Mobile menu toggle button */}\n// //         <div className=\"menu-toggle\" onClick={toggleMenu}>\n// //           {menuOpen ? <FaTimes /> : <FaBars />}\n// //         </div>\n// //       </header>\n\n// //       <main className=\"main-content\">\n// //         <Outlet />\n// //       </main>\n// //     </div>\n// //   );\n// // };\n\n// // export default Dashboard1;\n// import React, { useState, useEffect } from \"react\";\n// import { Link, Outlet, useNavigate } from \"react-router-dom\";\n// import { FaUserCircle, FaBars, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\n\n// const Dashboard1 = () => {\n//   const [menuOpen, setMenuOpen] = useState(false);\n//   const [darkMode, setDarkMode] = useState(() => localStorage.getItem(\"darkMode\") === \"true\");\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n//   const [role, setRole] = useState(\"\");\n//   const [profilePic, setProfilePic] = useState(localStorage.getItem(\"profilePic\") || \"https://via.placeholder.com/150\");\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const storedRole = localStorage.getItem(\"role\")?.trim().toLowerCase();\n//     setRole(storedRole || \"\");\n//   }, []);\n\n//   useEffect(() => {\n//     document.documentElement.classList.toggle(\"dark\", darkMode);\n//     localStorage.setItem(\"darkMode\", darkMode);\n//   }, [darkMode]);\n\n//   const toggleMenu = () => setMenuOpen(!menuOpen);\n//   const toggleDarkMode = () => setDarkMode((prev) => !prev);\n\n//   const handleLogout = () => {\n//     localStorage.clear();\n//     setUsername(\"\");\n//     setRole(\"\");\n//     setProfilePic(\"https://via.placeholder.com/150\");\n//     navigate(\"/login\");\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-white transition-colors\">\n//       <header className=\"bg-white dark:bg-gray-800 shadow-md fixed w-full z-50\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex items-center justify-between h-16\">\n//           <h1 className=\"text-xl font-bold text-blue-600 dark:text-blue-400\">NoteHive</h1>\n\n//           <nav className=\"hidden md:flex space-x-6 items-center\">\n//             <Link to=\"/\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Home</Link>\n//             <Link to=\"/about\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">About</Link>\n//             <Link to=\"/notes\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Notes</Link>\n//             <Link to=\"/cp-trivia\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Trivia & Quizzes</Link>\n\n//             {role === \"admin\" && (\n//               <>\n//                 <Link to=\"/admin\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Admin Panel</Link>\n//                 <Link to=\"/admin/noteManager\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Note Manager</Link>\n//               </>\n//             )}\n\n//             {username ? (\n//               <div className=\"relative group\">\n//                 <div className=\"flex items-center cursor-pointer space-x-2\">\n//                   <img src={profilePic} alt=\"Profile\" className=\"w-8 h-8 rounded-full border-2 border-blue-500\" />\n//                   <span>{username}</span>\n//                 </div>\n//                 <ul className=\"absolute right-0 mt-2 bg-white dark:bg-gray-700 rounded shadow-md w-40 py-2 opacity-0 group-hover:opacity-100 group-hover:translate-y-0 translate-y-2 transform transition duration-200 z-50\">\n//                   <li onClick={() => navigate(\"/profile\")} className=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 cursor-pointer\">Profile</li>\n//                   <li onClick={() => navigate(\"/settings\")} className=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 cursor-pointer\">Settings</li>\n//                   <li onClick={handleLogout} className=\"px-4 py-2 text-red-600 hover:bg-gray-100 dark:hover:bg-gray-600 cursor-pointer\">Logout</li>\n//                 </ul>\n//               </div>\n//             ) : (\n//               <>\n//                 <Link to=\"/login\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Login</Link>\n//                 <Link to=\"/register\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Sign Up</Link>\n//               </>\n//             )}\n\n//             <button onClick={toggleDarkMode} className=\"text-xl\">\n//               {darkMode ? <FaSun /> : <FaMoon />}\n//             </button>\n//           </nav>\n\n//           <button className=\"md:hidden text-xl\" onClick={toggleMenu}>\n//             {menuOpen ? <FaTimes /> : <FaBars />}\n//           </button>\n//         </div>\n\n//         {/* Mobile menu */}\n//         {menuOpen && (\n//           <div className=\"md:hidden bg-white dark:bg-gray-800 px-4 pt-4 pb-6 space-y-3\">\n//             <Link to=\"/\" className=\"block\" onClick={toggleMenu}>Home</Link>\n//             <Link to=\"/about\" className=\"block\" onClick={toggleMenu}>About</Link>\n//             <Link to=\"/notes\" className=\"block\" onClick={toggleMenu}>Notes</Link>\n//             <Link to=\"/cp-trivia\" className=\"block\" onClick={toggleMenu}>Trivia & Quizzes</Link>\n//             {role === \"admin\" && (\n//               <>\n//                 <Link to=\"/admin\" className=\"block\" onClick={toggleMenu}>Admin Panel</Link>\n//                 <Link to=\"/admin/noteManager\" className=\"block\" onClick={toggleMenu}>Note Manager</Link>\n//               </>\n//             )}\n//             {username ? (\n//               <>\n//                 <div onClick={() => { navigate(\"/profile\"); toggleMenu(); }} className=\"cursor-pointer\">Profile</div>\n//                 <div onClick={() => { navigate(\"/settings\"); toggleMenu(); }} className=\"cursor-pointer\">Settings</div>\n//                 <div onClick={() => { handleLogout(); toggleMenu(); }} className=\"text-red-600 cursor-pointer\">Logout</div>\n//               </>\n//             ) : (\n//               <>\n//                 <Link to=\"/login\" className=\"block\" onClick={toggleMenu}>Login</Link>\n//                 <Link to=\"/register\" className=\"block\" onClick={toggleMenu}>Sign Up</Link>\n//               </>\n//             )}\n//             <button onClick={toggleDarkMode} className=\"text-xl\">\n//               {darkMode ? <FaSun /> : <FaMoon />}\n//             </button>\n//           </div>\n//         )}\n//       </header>\n\n//       <main className=\"pt-20 px-4 sm:px-6 lg:px-8\">\n//         <Outlet />\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default Dashboard1;","map":{"version":3,"names":[],"sources":["C:/Users/Anshi/Desktop/NoteHive-main/client/src/components/Dashboard1.js"],"sourcesContent":["// // import React, { useState, useEffect } from \"react\";\n// // import { Link, Outlet, useNavigate } from \"react-router-dom\";\n// // import { FaUserCircle, FaBars, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\n// // import '../css/Dashboard.css';\n\n// // const Dashboard1 = () => {\n// //   const [menuOpen, setMenuOpen] = useState(false);\n// //   const [darkMode, setDarkMode] = useState(() => localStorage.getItem(\"darkMode\") === \"true\");\n// //   const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n// //   const [role, setRole] = useState(\"\"); // Start with an empty role\n// //   const [profilePic, setProfilePic] = useState(localStorage.getItem(\"profilePic\") || \"https://via.placeholder.com/150\");\n\n// //   const navigate = useNavigate();\n\n// //   // Get role when component mounts\n// //   useEffect(() => {\n// //     const storedRole = localStorage.getItem(\"role\")?.trim().toLowerCase();\n// //     setRole(storedRole || \"\"); // Ensure a valid role is set\n// //   }, []);\n\n// //   // Sync dark mode state\n// //   useEffect(() => {\n// //     document.body.classList.toggle(\"dark-mode\", darkMode);\n// //     localStorage.setItem(\"darkMode\", darkMode);\n// //   }, [darkMode]);\n\n// //   const toggleMenu = () => setMenuOpen(!menuOpen);\n// //   const toggleDarkMode = () => setDarkMode((prev) => !prev);\n\n// //   const handleLogout = () => {\n// //     localStorage.removeItem(\"username\");\n// //     localStorage.removeItem(\"role\"); // Remove role\n// //     localStorage.removeItem(\"token\");\n// //     localStorage.removeItem(\"profilePic\"); // Clear profile picture\n// //     setUsername(\"\");\n// //     setRole(\"\"); // Clear role immediately\n// //     setProfilePic(\"https://via.placeholder.com/150\"); // Reset profile picture to default\n// //     navigate(\"/login\");\n// //     window.location.reload();\n// //   };\n\n// //   return (\n// //     <div className={`dashboard-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n// //       <header className=\"taskbar\">\n// //         <div className=\"taskbar-logo\">\n// //           <h1>NoteHive</h1>\n// //         </div>\n\n// //         <nav className={`taskbar-nav ${menuOpen ? \"open\" : \"\"}`}>\n// //           <ul>\n// //             <li><Link to=\"/\">Home</Link></li>\n// //             <li><Link to=\"about\">About</Link></li>\n// //             <li><Link to=\"notes\">Notes</Link></li>\n// //             <li><Link to=\"cp-trivia\">Trivia & Quizzes</Link></li>\n\n// //             {/* Only show Admin Panel for users with role \"admin\" */}\n// //             {role === \"admin\" && (\n// //               <>\n// //                 <li><Link to=\"/admin\">Admin Panel</Link></li>\n// //                 <li><Link to=\"/admin/noteManager\">Note Manager</Link></li>\n// //               </>\n// //             )}\n// //             {username ? (\n// //               <li className=\"profile-dropdown\">\n// //                 <span className=\"profile-trigger\">\n// //                   {/* Display profile picture or default icon */}\n// //                   <img\n// //                     src={profilePic} \n// //                     alt=\"Profile\"\n// //                     className=\"profile-icon\"\n// //                     style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\n// //                   />\n// //                   {username}\n// //                 </span>\n// //                 <ul className=\"dropdown-menu\">\n// //                   <li onClick={() => navigate(\"/profile\")}>Profile</li>\n// //                   <li onClick={() => navigate(\"/settings\")}>Settings</li>\n// //                   <li onClick={handleLogout}>Logout</li>\n// //                 </ul>\n// //               </li>\n// //             ) : (\n// //               <>\n// //                 <li><Link to=\"login\">Login</Link></li>\n// //                 <li><Link to=\"register\">Sign Up</Link></li>\n// //               </>\n// //             )}\n\n// //             {/* Dark mode toggle */}\n// //             <li className=\"dark-mode-toggle\" onClick={toggleDarkMode}>\n// //               {darkMode ? <FaSun /> : <FaMoon />}\n// //             </li>\n// //           </ul>\n// //         </nav>\n\n// //         {/* Mobile menu toggle button */}\n// //         <div className=\"menu-toggle\" onClick={toggleMenu}>\n// //           {menuOpen ? <FaTimes /> : <FaBars />}\n// //         </div>\n// //       </header>\n\n// //       <main className=\"main-content\">\n// //         <Outlet />\n// //       </main>\n// //     </div>\n// //   );\n// // };\n\n// // export default Dashboard1;\n// import React, { useState, useEffect } from \"react\";\n// import { Link, Outlet, useNavigate } from \"react-router-dom\";\n// import { FaUserCircle, FaBars, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\n\n// const Dashboard1 = () => {\n//   const [menuOpen, setMenuOpen] = useState(false);\n//   const [darkMode, setDarkMode] = useState(() => localStorage.getItem(\"darkMode\") === \"true\");\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n//   const [role, setRole] = useState(\"\");\n//   const [profilePic, setProfilePic] = useState(localStorage.getItem(\"profilePic\") || \"https://via.placeholder.com/150\");\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const storedRole = localStorage.getItem(\"role\")?.trim().toLowerCase();\n//     setRole(storedRole || \"\");\n//   }, []);\n\n//   useEffect(() => {\n//     document.documentElement.classList.toggle(\"dark\", darkMode);\n//     localStorage.setItem(\"darkMode\", darkMode);\n//   }, [darkMode]);\n\n//   const toggleMenu = () => setMenuOpen(!menuOpen);\n//   const toggleDarkMode = () => setDarkMode((prev) => !prev);\n\n//   const handleLogout = () => {\n//     localStorage.clear();\n//     setUsername(\"\");\n//     setRole(\"\");\n//     setProfilePic(\"https://via.placeholder.com/150\");\n//     navigate(\"/login\");\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-white transition-colors\">\n//       <header className=\"bg-white dark:bg-gray-800 shadow-md fixed w-full z-50\">\n//         <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex items-center justify-between h-16\">\n//           <h1 className=\"text-xl font-bold text-blue-600 dark:text-blue-400\">NoteHive</h1>\n\n//           <nav className=\"hidden md:flex space-x-6 items-center\">\n//             <Link to=\"/\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Home</Link>\n//             <Link to=\"/about\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">About</Link>\n//             <Link to=\"/notes\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Notes</Link>\n//             <Link to=\"/cp-trivia\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Trivia & Quizzes</Link>\n\n//             {role === \"admin\" && (\n//               <>\n//                 <Link to=\"/admin\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Admin Panel</Link>\n//                 <Link to=\"/admin/noteManager\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Note Manager</Link>\n//               </>\n//             )}\n\n//             {username ? (\n//               <div className=\"relative group\">\n//                 <div className=\"flex items-center cursor-pointer space-x-2\">\n//                   <img src={profilePic} alt=\"Profile\" className=\"w-8 h-8 rounded-full border-2 border-blue-500\" />\n//                   <span>{username}</span>\n//                 </div>\n//                 <ul className=\"absolute right-0 mt-2 bg-white dark:bg-gray-700 rounded shadow-md w-40 py-2 opacity-0 group-hover:opacity-100 group-hover:translate-y-0 translate-y-2 transform transition duration-200 z-50\">\n//                   <li onClick={() => navigate(\"/profile\")} className=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 cursor-pointer\">Profile</li>\n//                   <li onClick={() => navigate(\"/settings\")} className=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 cursor-pointer\">Settings</li>\n//                   <li onClick={handleLogout} className=\"px-4 py-2 text-red-600 hover:bg-gray-100 dark:hover:bg-gray-600 cursor-pointer\">Logout</li>\n//                 </ul>\n//               </div>\n//             ) : (\n//               <>\n//                 <Link to=\"/login\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Login</Link>\n//                 <Link to=\"/register\" className=\"hover:text-blue-600 dark:hover:text-blue-400 transition\">Sign Up</Link>\n//               </>\n//             )}\n\n//             <button onClick={toggleDarkMode} className=\"text-xl\">\n//               {darkMode ? <FaSun /> : <FaMoon />}\n//             </button>\n//           </nav>\n\n//           <button className=\"md:hidden text-xl\" onClick={toggleMenu}>\n//             {menuOpen ? <FaTimes /> : <FaBars />}\n//           </button>\n//         </div>\n\n//         {/* Mobile menu */}\n//         {menuOpen && (\n//           <div className=\"md:hidden bg-white dark:bg-gray-800 px-4 pt-4 pb-6 space-y-3\">\n//             <Link to=\"/\" className=\"block\" onClick={toggleMenu}>Home</Link>\n//             <Link to=\"/about\" className=\"block\" onClick={toggleMenu}>About</Link>\n//             <Link to=\"/notes\" className=\"block\" onClick={toggleMenu}>Notes</Link>\n//             <Link to=\"/cp-trivia\" className=\"block\" onClick={toggleMenu}>Trivia & Quizzes</Link>\n//             {role === \"admin\" && (\n//               <>\n//                 <Link to=\"/admin\" className=\"block\" onClick={toggleMenu}>Admin Panel</Link>\n//                 <Link to=\"/admin/noteManager\" className=\"block\" onClick={toggleMenu}>Note Manager</Link>\n//               </>\n//             )}\n//             {username ? (\n//               <>\n//                 <div onClick={() => { navigate(\"/profile\"); toggleMenu(); }} className=\"cursor-pointer\">Profile</div>\n//                 <div onClick={() => { navigate(\"/settings\"); toggleMenu(); }} className=\"cursor-pointer\">Settings</div>\n//                 <div onClick={() => { handleLogout(); toggleMenu(); }} className=\"text-red-600 cursor-pointer\">Logout</div>\n//               </>\n//             ) : (\n//               <>\n//                 <Link to=\"/login\" className=\"block\" onClick={toggleMenu}>Login</Link>\n//                 <Link to=\"/register\" className=\"block\" onClick={toggleMenu}>Sign Up</Link>\n//               </>\n//             )}\n//             <button onClick={toggleDarkMode} className=\"text-xl\">\n//               {darkMode ? <FaSun /> : <FaMoon />}\n//             </button>\n//           </div>\n//         )}\n//       </header>\n\n//       <main className=\"pt-20 px-4 sm:px-6 lg:px-8\">\n//         <Outlet />\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default Dashboard1;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}