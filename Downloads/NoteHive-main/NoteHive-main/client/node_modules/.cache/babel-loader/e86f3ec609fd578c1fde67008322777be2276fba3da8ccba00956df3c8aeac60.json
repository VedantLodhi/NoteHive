{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anshi\\\\Desktop\\\\NoteHive-main\\\\client\\\\src\\\\pages\\\\CPTrivia.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { FaClock, FaTrophy } from \"react-icons/fa\";\n// import { motion } from \"framer-motion\";\n\n// const CPTrivia = () => {\n//   const [quizData, setQuizData] = useState([]);\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [score, setScore] = useState(0);\n//   const [attemptsLeft, setAttemptsLeft] = useState(2);\n//   const [selectedAnswer, setSelectedAnswer] = useState(null);\n//   const [quizFinished, setQuizFinished] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [timer, setTimer] = useState(60);\n//   const [leaderboard, setLeaderboard] = useState([]);\n\n//   const [topic, setTopic] = useState(\"Data Structures\");\n//   const [difficulty, setDifficulty] = useState(\"Medium\");\n//   const [numQuestions, setNumQuestions] = useState(5);\n\n//   const topics = [\n//     \"React Js\", \"Node Js\",\n//     \"OOPS\", \"Operating System\", \"Computer Networks\",\"Linux\",\"Git\",\n//     \"DBMS\", \"System Design\", \"Data Structures\", \"Algorithms\"\n//   ];\n\n//   const difficulties = [\"Easy\", \"Medium\", \"Hard\"];\n\n//   // Fetch trivia questions\n//   const fetchTriviaData = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/generateTrivia\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ topic, difficulty, numQuestions }),\n//       });\n\n//       const data = await response.json();\n//       console.log(\"Received Data:\", data);\n\n//       if (data.quizzes) {\n//         setQuizData(data.quizzes);\n//         setCurrentQuestion(0);\n//         setScore(0);\n//         setAttemptsLeft(2);\n//         setQuizFinished(false);\n//         setSelectedAnswer(null);\n//         setTimer(60);\n//       } else {\n//         setQuizData([]);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching trivia:\", error);\n//     }\n//     setLoading(false);\n//   };\n\n//   // Handle answer selection\n//   const handleAnswerClick = (option) => {\n//     if (selectedAnswer || attemptsLeft === 0) return;\n\n//     if (option === quizData[currentQuestion].answer) {\n//       // Correct Answer: Award points based on attempts\n//       setScore((prevScore) => prevScore + (attemptsLeft === 2 ? 10 : 5));\n//       setSelectedAnswer(option);\n//       setTimeout(() => nextQuestion(), 1000);\n//     } else {\n//       // Wrong Answer: Reduce attempts\n//       setAttemptsLeft((prev) => prev - 1);\n//       setSelectedAnswer(option);\n\n//       if (attemptsLeft === 2) {\n//         // First Wrong Attempt: Reset selection after a delay\n//         setTimeout(() => setSelectedAnswer(null), 1000);\n//       } else {\n//         // Second Wrong Attempt: Move to next question\n//         setTimeout(() => nextQuestion(), 1000);\n//       }\n//     }\n//   };\n\n//   // Move to next question or finish quiz\n//   const nextQuestion = () => {\n//     if (currentQuestion + 1 < quizData.length) {\n//       setCurrentQuestion((prev) => prev + 1);\n//       setAttemptsLeft(2);\n//       setSelectedAnswer(null);\n//       setTimer(60);\n//     } else {\n//       setQuizFinished(true);\n//       updateLeaderboard();\n//     }\n//   };\n\n//   // Timer logic\n//   useEffect(() => {\n//     if (quizFinished) return;\n//     if (timer === 0) {\n//       nextQuestion();\n//       return;\n//     }\n\n//     const interval = setTimeout(() => setTimer((prev) => prev - 1), 1000);\n//     return () => clearTimeout(interval);\n//   }, [timer, quizFinished]);\n\n//   // Update leaderboard\n//   const updateLeaderboard = () => {\n//     setLeaderboard((prev) => [\n//       ...prev,\n//       { topic, difficulty, score, timestamp: new Date().toISOString() }\n//     ]);\n//   };\n\n//   const saveLeaderboard = async () => {\n//     const token = localStorage.getItem(\"token\");\n//     const username = localStorage.getItem(\"username\"); // Ensure username is stored\n\n//     if (!token || !username) {\n//       console.warn(\"User not authenticated or missing username.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/leaderboard/saveLeaderboard\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           \"Authorization\": `Bearer ${token}`,\n//         },\n//         body: JSON.stringify({ username, topic, difficulty, score }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`Error ${response.status}: ${response.statusText}`);\n//       }\n\n//       console.log(\"Leaderboard entry saved successfully.\");\n//       fetchLeaderboard(); // Refresh leaderboard after saving\n//     } catch (error) {\n//       console.error(\"Error saving leaderboard:\", error);\n//     }\n//   };\n\n//   const fetchLeaderboard = async () => {\n//     const token = localStorage.getItem(\"token\");\n\n//     if (!token) {\n//       console.warn(\"No authentication token found.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/leaderboard/getLeaderboard\", {\n//         method: \"GET\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           \"Authorization\": `Bearer ${token}`,\n//         },\n//       });\n\n//       const data = await response.json();\n//       console.log(\"Raw leaderboard data:\", data); // Log the response\n\n//       // Ensure leaderboard is an array\n//       if (!Array.isArray(data.leaderboard)) {\n//         throw new Error(\"Invalid leaderboard data format\");\n//       }\n\n//       setLeaderboard(data.leaderboard);\n//     } catch (error) {\n//       console.error(\"Error fetching leaderboard:\", error);\n//       setLeaderboard([]); // Ensure leaderboard remains an array\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchLeaderboard();\n//   }, []); // Run only once when component loads\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-white p-6\">\n//       <h1 className=\"text-3xl font-bold mb-4 animate-fade-in\">\n//       ðŸ’¡CP Trivia & QuizzesðŸ’¡\n//       </h1>\n\n//       {/* Topic & Difficulty Selection */}\n//       <div className=\"flex flex-wrap gap-4 mb-4\">\n//         <select className=\"px-4 py-2 bg-gray-700 rounded-md\" value={topic} onChange={(e) => setTopic(e.target.value)}>\n//           {topics.map((t) => <option key={t} value={t}>{t}</option>)}\n//         </select>\n\n//         <select className=\"px-4 py-2 bg-gray-700 rounded-md\" value={difficulty} onChange={(e) => setDifficulty(e.target.value)}>\n//           {difficulties.map((d) => <option key={d} value={d}>{d}</option>)}\n//         </select>\n\n//         <input type=\"number\" min=\"1\" max=\"10\" value={numQuestions} onChange={(e) => setNumQuestions(e.target.value)}\n//           className=\"px-4 py-2 bg-gray-700 rounded-md text-center w-20\" />\n//       </div>\n\n//       {/* Generate Quiz Button */}\n//       <button onClick={fetchTriviaData} disabled={loading}\n//         className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-500 text-white font-semibold rounded-lg transition-transform transform hover:scale-105 active:scale-95 mb-6\">\n//         {loading ? \"Generating Quiz...\" : \"Generate Quiz\"}\n//       </button>\n\n//       {/* Quiz Container */}\n//       {!quizFinished && quizData.length > 0 && (\n//         <div className=\"w-full max-w-lg p-6 bg-gray-800 rounded-lg shadow-md animate-fade-in\">\n//           <h2 className=\"text-xl font-semibold mb-4\">\n//             Question {currentQuestion + 1}:\n//           </h2>\n//           <p className=\"text-lg\">{quizData[currentQuestion].question}</p>\n\n//           <ul className=\"mt-4 space-y-3\">\n//             {quizData[currentQuestion].options.map((option, idx) => (\n//               <motion.li\n//                 key={idx}\n//                 onClick={() => handleAnswerClick(option)}\n//                 className={`p-3 rounded-lg cursor-pointer transition duration-300 ${\n//                   selectedAnswer === option \n//                     ? option === quizData[currentQuestion].answer\n//                       ? \"bg-green-500\"\n//                       : \"bg-red-500\"\n//                     : \"bg-gray-700 hover:bg-gray-600\"\n//                 }`}\n//                 whileTap={{ scale: 0.95 }}\n//               >\n//                 {option}\n//               </motion.li>\n//             ))}\n//           </ul>\n\n//           <div className=\"flex justify-between mt-4\">\n//             <p className=\"text-sm text-gray-300\">Attempts Left: {attemptsLeft}</p>\n//             <p className=\"text-sm text-red-400 flex items-center\">\n//               <FaClock className=\"mr-1\" /> Time Left: {timer}s\n//             </p>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Leaderboard */}\n//       <div className=\"w-full max-w-lg mt-6\">\n//         <h3 className=\"text-xl font-bold mb-2 flex items-center\">\n//           <FaTrophy className=\"mr-2 text-yellow-400\" /> Leaderboard\n//         </h3>\n//         <table className=\"w-full bg-gray-800 text-white rounded-lg\">\n//           <thead>\n//             <tr className=\"bg-gray-700\">\n//               <th className=\"p-2\">#</th>\n//               <th className=\"p-2\">Topic</th>\n//               <th className=\"p-2\">Difficulty</th>\n//               <th className=\"p-2\">Score</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//   {Array.isArray(leaderboard) && leaderboard.length > 0 ? (\n//     leaderboard.sort((a, b) => b.score - a.score).map((entry, idx) => (\n//       <tr key={idx} className=\"text-center border-b border-gray-600\">\n//         <td className=\"p-2\">{idx + 1}</td>\n//         <td className=\"p-2\">{entry.topic}</td>\n//         <td className=\"p-2\">{entry.difficulty}</td>\n//         <td className=\"p-2\">{entry.score}</td>\n//       </tr>\n//     ))\n//   ) : (\n//     <tr>\n//       <td colSpan=\"4\" className=\"p-4 text-center text-gray-400\">\n//         No leaderboard data available.\n//       </td>\n//     </tr>\n//   )}\n// </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CPTrivia;\nimport React, { useState, useEffect } from \"react\";\nimport { FaClock, FaTrophy, FaStar, FaRegSmileBeam, FaRegSadTear } from \"react-icons/fa\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport Confetti from 'react-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CPTrivia = () => {\n  _s();\n  // State declarations\n  const [quizData, setQuizData] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [attemptsLeft, setAttemptsLeft] = useState(2);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [timer, setTimer] = useState(60);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [topic, setTopic] = useState(\"Data Structures\");\n  const [difficulty, setDifficulty] = useState(\"Medium\");\n  const [numQuestions, setNumQuestions] = useState(5);\n\n  // Constants\n  const topics = [\"React Js\", \"Node Js\", \"OOPS\", \"Operating System\", \"Computer Networks\", \"Linux\", \"Git\", \"DBMS\", \"System Design\", \"Data Structures\", \"Algorithms\"];\n  const difficulties = [\"Easy\", \"Medium\", \"Hard\"];\n\n  // Fetch trivia questions\n  const fetchTriviaData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/generateTrivia\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          topic,\n          difficulty,\n          numQuestions\n        })\n      });\n      const data = await response.json();\n      console.log(\"Received Data:\", data);\n      if (data.quizzes) {\n        setQuizData(data.quizzes);\n        setCurrentQuestion(0);\n        setScore(0);\n        setAttemptsLeft(2);\n        setQuizFinished(false);\n        setSelectedAnswer(null);\n        setTimer(60);\n      } else {\n        setQuizData([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching trivia:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Handle answer selection\n  const handleAnswerClick = option => {\n    if (selectedAnswer || attemptsLeft === 0) return;\n    const isCorrect = option === quizData[currentQuestion].answer;\n    if (isCorrect) {\n      setScore(prev => prev + (attemptsLeft === 2 ? 10 : 5));\n      setSelectedAnswer(option);\n      setTimeout(nextQuestion, 1000);\n    } else {\n      setAttemptsLeft(prev => prev - 1);\n      setSelectedAnswer(option);\n      if (attemptsLeft === 2) {\n        setTimeout(() => setSelectedAnswer(null), 1000);\n      } else {\n        setTimeout(nextQuestion, 1000);\n      }\n    }\n  };\n\n  // Move to next question or finish quiz\n  const nextQuestion = () => {\n    if (currentQuestion + 1 < quizData.length) {\n      setCurrentQuestion(prev => prev + 1);\n      setAttemptsLeft(2);\n      setSelectedAnswer(null);\n      setTimer(60);\n    } else {\n      setQuizFinished(true);\n      setShowConfetti(true);\n      setTimeout(() => setShowConfetti(false), 5000);\n      updateLeaderboard();\n    }\n  };\n\n  // Timer logic\n  useEffect(() => {\n    if (quizFinished) return;\n    if (timer === 0) {\n      nextQuestion();\n      return;\n    }\n    const interval = setTimeout(() => setTimer(prev => prev - 1), 1000);\n    return () => clearTimeout(interval);\n  }, [timer, quizFinished]);\n\n  // Update leaderboard\n  const updateLeaderboard = () => {\n    setLeaderboard(prev => [...prev, {\n      topic,\n      difficulty,\n      score,\n      timestamp: new Date().toISOString()\n    }]);\n  };\n  const saveLeaderboard = async () => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    if (!token || !username) {\n      console.warn(\"User not authenticated or missing username.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/leaderboard/saveLeaderboard\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          username,\n          topic,\n          difficulty,\n          score\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n      console.log(\"Leaderboard entry saved successfully.\");\n      fetchLeaderboard();\n    } catch (error) {\n      console.error(\"Error saving leaderboard:\", error);\n    }\n  };\n  const fetchLeaderboard = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.warn(\"No authentication token found.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/leaderboard/getLeaderboard\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (Array.isArray(data.leaderboard)) {\n        setLeaderboard(data.leaderboard);\n      }\n    } catch (error) {\n      console.error(\"Error fetching leaderboard:\", error);\n      setLeaderboard([]);\n    }\n  };\n  useEffect(() => {\n    fetchLeaderboard();\n  }, []);\n\n  // Progress calculation\n  const progress = quizData.length > 0 ? (currentQuestion + 1) / quizData.length * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center bg-gradient-to-b from-blue-50 to-purple-50 p-6 relative\",\n    children: [showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {\n      recycle: false,\n      numberOfPieces: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(motion.h1, {\n      initial: {\n        y: -50,\n        opacity: 0\n      },\n      animate: {\n        y: 0,\n        opacity: 1\n      },\n      className: \"text-4xl font-bold mb-8 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\",\n      children: \"\\uD83D\\uDCA1 CP Trivia & Quizzes \\uD83D\\uDCA1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"w-full max-w-2xl bg-white rounded-xl shadow-lg p-6 mb-8\",\n      initial: {\n        scale: 0.95,\n        opacity: 0\n      },\n      animate: {\n        scale: 1,\n        opacity: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4 justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative flex-1 min-w-[200px]\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full px-4 py-2 rounded-lg border border-gray-300 bg-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            value: topic,\n            onChange: e => setTopic(e.target.value),\n            children: topics.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: t,\n              children: t\n            }, t, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative flex-1 min-w-[150px]\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full px-4 py-2 rounded-lg border border-gray-300 bg-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            value: difficulty,\n            onChange: e => setDifficulty(e.target.value),\n            children: difficulties.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: \"10\",\n            value: numQuestions,\n            onChange: e => setNumQuestions(e.target.value),\n            className: \"w-24 px-4 py-2 rounded-lg border border-gray-300 bg-white text-center focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n        onClick: fetchTriviaData,\n        disabled: loading,\n        whileHover: {\n          scale: 1.05\n        },\n        whileTap: {\n          scale: 0.95\n        },\n        className: \"w-full mt-6 px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-500 text-white font-semibold rounded-lg shadow-md hover:shadow-lg transition-all\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this), \"Generating Quiz...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this) : \"ðŸš€ Start Quiz!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: !quizFinished && quizData.length > 0 && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: -20\n        },\n        className: \"w-full max-w-2xl bg-white rounded-xl shadow-lg p-8 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-100 px-4 py-2 rounded-full\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-blue-600\",\n                children: [\"Score: \", score]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-orange-100 px-4 py-2 rounded-full\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-orange-600\",\n                children: [\"Attempts: \", attemptsLeft]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 text-red-500\",\n            children: [/*#__PURE__*/_jsxDEV(FaClock, {\n              className: \"text-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: [timer, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-2 bg-gray-200 rounded-full mb-6 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"h-full bg-gradient-to-r from-blue-500 to-purple-500\",\n            initial: {\n              width: 0\n            },\n            animate: {\n              width: `${progress}%`\n            },\n            transition: {\n              duration: 0.5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4 text-gray-800\",\n          children: [\"Question \", currentQuestion + 1, \" of \", quizData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-700 mb-8\",\n          children: quizData[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: quizData[currentQuestion].options.map((option, idx) => {\n            const isCorrect = option === quizData[currentQuestion].answer;\n            const isSelected = selectedAnswer === option;\n            return /*#__PURE__*/_jsxDEV(motion.div, {\n              whileHover: {\n                scale: 1.03\n              },\n              whileTap: {\n                scale: 0.97\n              },\n              className: `p-4 rounded-xl cursor-pointer transition-all ${selectedAnswer ? isCorrect ? 'bg-green-100 border-2 border-green-500' : isSelected ? 'bg-red-100 border-2 border-red-500' : 'bg-gray-100 opacity-50' : 'bg-gray-100 hover:bg-gray-50'}`,\n              onClick: () => handleAnswerClick(option),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-lg font-semibold ${selectedAnswer ? isCorrect ? 'text-green-600' : isSelected ? 'text-red-600' : 'text-gray-400' : 'text-gray-700'}`,\n                  children: [String.fromCharCode(65 + idx), \". \", option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 23\n                }, this), selectedAnswer && isSelected && /*#__PURE__*/_jsxDEV(motion.span, {\n                  initial: {\n                    scale: 0\n                  },\n                  animate: {\n                    scale: 1\n                  },\n                  className: \"ml-auto\",\n                  children: isCorrect ? /*#__PURE__*/_jsxDEV(FaRegSmileBeam, {\n                    className: \"text-2xl text-green-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaRegSadTear, {\n                    className: \"text-2xl text-red-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 21\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this)]\n      }, currentQuestion, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"w-full max-w-2xl bg-white rounded-xl shadow-lg p-6\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(FaTrophy, {\n          className: \"text-2xl text-yellow-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: \"Leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-3 text-left text-gray-600 font-semibold\",\n                children: \"Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-3 text-left text-gray-600 font-semibold\",\n                children: \"Topic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-3 text-left text-gray-600 font-semibold\",\n                children: \"Difficulty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-3 text-left text-gray-600 font-semibold\",\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: leaderboard.sort((a, b) => b.score - a.score).map((entry, idx) => /*#__PURE__*/_jsxDEV(motion.tr, {\n              initial: {\n                opacity: 0\n              },\n              animate: {\n                opacity: 1\n              },\n              className: `${idx % 2 === 0 ? 'bg-white' : 'bg-gray-50'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2\",\n                  children: [idx === 0 && /*#__PURE__*/_jsxDEV(FaStar, {\n                    className: \"text-yellow-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 665,\n                    columnNumber: 37\n                  }, this), idx + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3 font-medium text-gray-700\",\n                children: entry.topic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 rounded-full text-sm ${entry.difficulty === 'Easy' ? 'bg-green-100 text-green-700' : entry.difficulty === 'Medium' ? 'bg-yellow-100 text-yellow-700' : 'bg-red-100 text-red-700'}`,\n                  children: entry.difficulty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3 font-semibold text-blue-600\",\n                children: entry.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 469,\n    columnNumber: 5\n  }, this);\n};\n_s(CPTrivia, \"7oT4z7cuRrFvqiCZxx5NXAjpL3M=\");\n_c = CPTrivia;\nexport default CPTrivia;\nvar _c;\n$RefreshReg$(_c, \"CPTrivia\");","map":{"version":3,"names":["React","useState","useEffect","FaClock","FaTrophy","FaStar","FaRegSmileBeam","FaRegSadTear","motion","AnimatePresence","Confetti","jsxDEV","_jsxDEV","CPTrivia","_s","quizData","setQuizData","currentQuestion","setCurrentQuestion","score","setScore","attemptsLeft","setAttemptsLeft","selectedAnswer","setSelectedAnswer","quizFinished","setQuizFinished","loading","setLoading","timer","setTimer","leaderboard","setLeaderboard","showConfetti","setShowConfetti","topic","setTopic","difficulty","setDifficulty","numQuestions","setNumQuestions","topics","difficulties","fetchTriviaData","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","quizzes","error","handleAnswerClick","option","isCorrect","answer","prev","setTimeout","nextQuestion","length","updateLeaderboard","interval","clearTimeout","timestamp","Date","toISOString","saveLeaderboard","token","localStorage","getItem","username","warn","ok","Error","status","statusText","fetchLeaderboard","Array","isArray","progress","className","children","recycle","numberOfPieces","fileName","_jsxFileName","lineNumber","columnNumber","h1","initial","y","opacity","animate","div","scale","value","onChange","e","target","map","t","d","type","min","max","button","onClick","disabled","whileHover","whileTap","mode","exit","width","transition","duration","question","options","idx","isSelected","String","fromCharCode","span","sort","a","b","entry","tr","_c","$RefreshReg$"],"sources":["C:/Users/Anshi/Desktop/NoteHive-main/client/src/pages/CPTrivia.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { FaClock, FaTrophy } from \"react-icons/fa\";\n// import { motion } from \"framer-motion\";\n\n// const CPTrivia = () => {\n//   const [quizData, setQuizData] = useState([]);\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [score, setScore] = useState(0);\n//   const [attemptsLeft, setAttemptsLeft] = useState(2);\n//   const [selectedAnswer, setSelectedAnswer] = useState(null);\n//   const [quizFinished, setQuizFinished] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [timer, setTimer] = useState(60);\n//   const [leaderboard, setLeaderboard] = useState([]);\n\n//   const [topic, setTopic] = useState(\"Data Structures\");\n//   const [difficulty, setDifficulty] = useState(\"Medium\");\n//   const [numQuestions, setNumQuestions] = useState(5);\n\n//   const topics = [\n//     \"React Js\", \"Node Js\",\n//     \"OOPS\", \"Operating System\", \"Computer Networks\",\"Linux\",\"Git\",\n//     \"DBMS\", \"System Design\", \"Data Structures\", \"Algorithms\"\n//   ];\n\n//   const difficulties = [\"Easy\", \"Medium\", \"Hard\"];\n\n//   // Fetch trivia questions\n//   const fetchTriviaData = async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/generateTrivia\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ topic, difficulty, numQuestions }),\n//       });\n\n//       const data = await response.json();\n//       console.log(\"Received Data:\", data);\n\n//       if (data.quizzes) {\n//         setQuizData(data.quizzes);\n//         setCurrentQuestion(0);\n//         setScore(0);\n//         setAttemptsLeft(2);\n//         setQuizFinished(false);\n//         setSelectedAnswer(null);\n//         setTimer(60);\n//       } else {\n//         setQuizData([]);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching trivia:\", error);\n//     }\n//     setLoading(false);\n//   };\n\n//   // Handle answer selection\n//   const handleAnswerClick = (option) => {\n//     if (selectedAnswer || attemptsLeft === 0) return;\n  \n//     if (option === quizData[currentQuestion].answer) {\n//       // Correct Answer: Award points based on attempts\n//       setScore((prevScore) => prevScore + (attemptsLeft === 2 ? 10 : 5));\n//       setSelectedAnswer(option);\n//       setTimeout(() => nextQuestion(), 1000);\n//     } else {\n//       // Wrong Answer: Reduce attempts\n//       setAttemptsLeft((prev) => prev - 1);\n//       setSelectedAnswer(option);\n  \n//       if (attemptsLeft === 2) {\n//         // First Wrong Attempt: Reset selection after a delay\n//         setTimeout(() => setSelectedAnswer(null), 1000);\n//       } else {\n//         // Second Wrong Attempt: Move to next question\n//         setTimeout(() => nextQuestion(), 1000);\n//       }\n//     }\n//   };\n  \n\n//   // Move to next question or finish quiz\n//   const nextQuestion = () => {\n//     if (currentQuestion + 1 < quizData.length) {\n//       setCurrentQuestion((prev) => prev + 1);\n//       setAttemptsLeft(2);\n//       setSelectedAnswer(null);\n//       setTimer(60);\n//     } else {\n//       setQuizFinished(true);\n//       updateLeaderboard();\n//     }\n//   };\n\n//   // Timer logic\n//   useEffect(() => {\n//     if (quizFinished) return;\n//     if (timer === 0) {\n//       nextQuestion();\n//       return;\n//     }\n\n//     const interval = setTimeout(() => setTimer((prev) => prev - 1), 1000);\n//     return () => clearTimeout(interval);\n//   }, [timer, quizFinished]);\n\n//   // Update leaderboard\n//   const updateLeaderboard = () => {\n//     setLeaderboard((prev) => [\n//       ...prev,\n//       { topic, difficulty, score, timestamp: new Date().toISOString() }\n//     ]);\n//   };\n\n//   const saveLeaderboard = async () => {\n//     const token = localStorage.getItem(\"token\");\n//     const username = localStorage.getItem(\"username\"); // Ensure username is stored\n    \n//     if (!token || !username) {\n//       console.warn(\"User not authenticated or missing username.\");\n//       return;\n//     }\n  \n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/leaderboard/saveLeaderboard\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           \"Authorization\": `Bearer ${token}`,\n//         },\n//         body: JSON.stringify({ username, topic, difficulty, score }),\n//       });\n  \n//       if (!response.ok) {\n//         throw new Error(`Error ${response.status}: ${response.statusText}`);\n//       }\n  \n//       console.log(\"Leaderboard entry saved successfully.\");\n//       fetchLeaderboard(); // Refresh leaderboard after saving\n//     } catch (error) {\n//       console.error(\"Error saving leaderboard:\", error);\n//     }\n//   };\n  \n//   const fetchLeaderboard = async () => {\n//     const token = localStorage.getItem(\"token\");\n  \n//     if (!token) {\n//       console.warn(\"No authentication token found.\");\n//       return;\n//     }\n  \n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/leaderboard/getLeaderboard\", {\n//         method: \"GET\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           \"Authorization\": `Bearer ${token}`,\n//         },\n//       });\n  \n//       const data = await response.json();\n//       console.log(\"Raw leaderboard data:\", data); // Log the response\n  \n//       // Ensure leaderboard is an array\n//       if (!Array.isArray(data.leaderboard)) {\n//         throw new Error(\"Invalid leaderboard data format\");\n//       }\n  \n//       setLeaderboard(data.leaderboard);\n//     } catch (error) {\n//       console.error(\"Error fetching leaderboard:\", error);\n//       setLeaderboard([]); // Ensure leaderboard remains an array\n//     }\n//   };\n  \n//   useEffect(() => {\n//     fetchLeaderboard();\n//   }, []); // Run only once when component loads\n  \n  \n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-white p-6\">\n//       <h1 className=\"text-3xl font-bold mb-4 animate-fade-in\">\n//       ðŸ’¡CP Trivia & QuizzesðŸ’¡\n//       </h1>\n\n//       {/* Topic & Difficulty Selection */}\n//       <div className=\"flex flex-wrap gap-4 mb-4\">\n//         <select className=\"px-4 py-2 bg-gray-700 rounded-md\" value={topic} onChange={(e) => setTopic(e.target.value)}>\n//           {topics.map((t) => <option key={t} value={t}>{t}</option>)}\n//         </select>\n\n//         <select className=\"px-4 py-2 bg-gray-700 rounded-md\" value={difficulty} onChange={(e) => setDifficulty(e.target.value)}>\n//           {difficulties.map((d) => <option key={d} value={d}>{d}</option>)}\n//         </select>\n\n//         <input type=\"number\" min=\"1\" max=\"10\" value={numQuestions} onChange={(e) => setNumQuestions(e.target.value)}\n//           className=\"px-4 py-2 bg-gray-700 rounded-md text-center w-20\" />\n//       </div>\n\n//       {/* Generate Quiz Button */}\n//       <button onClick={fetchTriviaData} disabled={loading}\n//         className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-500 text-white font-semibold rounded-lg transition-transform transform hover:scale-105 active:scale-95 mb-6\">\n//         {loading ? \"Generating Quiz...\" : \"Generate Quiz\"}\n//       </button>\n\n//       {/* Quiz Container */}\n//       {!quizFinished && quizData.length > 0 && (\n//         <div className=\"w-full max-w-lg p-6 bg-gray-800 rounded-lg shadow-md animate-fade-in\">\n//           <h2 className=\"text-xl font-semibold mb-4\">\n//             Question {currentQuestion + 1}:\n//           </h2>\n//           <p className=\"text-lg\">{quizData[currentQuestion].question}</p>\n\n//           <ul className=\"mt-4 space-y-3\">\n//             {quizData[currentQuestion].options.map((option, idx) => (\n//               <motion.li\n//                 key={idx}\n//                 onClick={() => handleAnswerClick(option)}\n//                 className={`p-3 rounded-lg cursor-pointer transition duration-300 ${\n//                   selectedAnswer === option \n//                     ? option === quizData[currentQuestion].answer\n//                       ? \"bg-green-500\"\n//                       : \"bg-red-500\"\n//                     : \"bg-gray-700 hover:bg-gray-600\"\n//                 }`}\n//                 whileTap={{ scale: 0.95 }}\n//               >\n//                 {option}\n//               </motion.li>\n//             ))}\n//           </ul>\n\n//           <div className=\"flex justify-between mt-4\">\n//             <p className=\"text-sm text-gray-300\">Attempts Left: {attemptsLeft}</p>\n//             <p className=\"text-sm text-red-400 flex items-center\">\n//               <FaClock className=\"mr-1\" /> Time Left: {timer}s\n//             </p>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Leaderboard */}\n//       <div className=\"w-full max-w-lg mt-6\">\n//         <h3 className=\"text-xl font-bold mb-2 flex items-center\">\n//           <FaTrophy className=\"mr-2 text-yellow-400\" /> Leaderboard\n//         </h3>\n//         <table className=\"w-full bg-gray-800 text-white rounded-lg\">\n//           <thead>\n//             <tr className=\"bg-gray-700\">\n//               <th className=\"p-2\">#</th>\n//               <th className=\"p-2\">Topic</th>\n//               <th className=\"p-2\">Difficulty</th>\n//               <th className=\"p-2\">Score</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//   {Array.isArray(leaderboard) && leaderboard.length > 0 ? (\n//     leaderboard.sort((a, b) => b.score - a.score).map((entry, idx) => (\n//       <tr key={idx} className=\"text-center border-b border-gray-600\">\n//         <td className=\"p-2\">{idx + 1}</td>\n//         <td className=\"p-2\">{entry.topic}</td>\n//         <td className=\"p-2\">{entry.difficulty}</td>\n//         <td className=\"p-2\">{entry.score}</td>\n//       </tr>\n//     ))\n//   ) : (\n//     <tr>\n//       <td colSpan=\"4\" className=\"p-4 text-center text-gray-400\">\n//         No leaderboard data available.\n//       </td>\n//     </tr>\n//   )}\n// </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CPTrivia;\nimport React, { useState, useEffect } from \"react\";\nimport { FaClock, FaTrophy, FaStar, FaRegSmileBeam, FaRegSadTear } from \"react-icons/fa\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport Confetti from 'react-confetti';\n\nconst CPTrivia = () => {\n  // State declarations\n  const [quizData, setQuizData] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [attemptsLeft, setAttemptsLeft] = useState(2);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [timer, setTimer] = useState(60);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [topic, setTopic] = useState(\"Data Structures\");\n  const [difficulty, setDifficulty] = useState(\"Medium\");\n  const [numQuestions, setNumQuestions] = useState(5);\n\n  // Constants\n  const topics = [\n    \"React Js\", \"Node Js\",\n    \"OOPS\", \"Operating System\", \"Computer Networks\",\"Linux\",\"Git\",\n    \"DBMS\", \"System Design\", \"Data Structures\", \"Algorithms\"\n  ];\n\n  const difficulties = [\"Easy\", \"Medium\", \"Hard\"];\n\n  // Fetch trivia questions\n  const fetchTriviaData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/generateTrivia\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ topic, difficulty, numQuestions }),\n      });\n\n      const data = await response.json();\n      console.log(\"Received Data:\", data);\n\n      if (data.quizzes) {\n        setQuizData(data.quizzes);\n        setCurrentQuestion(0);\n        setScore(0);\n        setAttemptsLeft(2);\n        setQuizFinished(false);\n        setSelectedAnswer(null);\n        setTimer(60);\n      } else {\n        setQuizData([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching trivia:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Handle answer selection\n  const handleAnswerClick = (option) => {\n    if (selectedAnswer || attemptsLeft === 0) return;\n\n    const isCorrect = option === quizData[currentQuestion].answer;\n    \n    if (isCorrect) {\n      setScore(prev => prev + (attemptsLeft === 2 ? 10 : 5));\n      setSelectedAnswer(option);\n      setTimeout(nextQuestion, 1000);\n    } else {\n      setAttemptsLeft(prev => prev - 1);\n      setSelectedAnswer(option);\n      \n      if (attemptsLeft === 2) {\n        setTimeout(() => setSelectedAnswer(null), 1000);\n      } else {\n        setTimeout(nextQuestion, 1000);\n      }\n    }\n  };\n\n  // Move to next question or finish quiz\n  const nextQuestion = () => {\n    if (currentQuestion + 1 < quizData.length) {\n      setCurrentQuestion(prev => prev + 1);\n      setAttemptsLeft(2);\n      setSelectedAnswer(null);\n      setTimer(60);\n    } else {\n      setQuizFinished(true);\n      setShowConfetti(true);\n      setTimeout(() => setShowConfetti(false), 5000);\n      updateLeaderboard();\n    }\n  };\n\n  // Timer logic\n  useEffect(() => {\n    if (quizFinished) return;\n    if (timer === 0) {\n      nextQuestion();\n      return;\n    }\n\n    const interval = setTimeout(() => setTimer(prev => prev - 1), 1000);\n    return () => clearTimeout(interval);\n  }, [timer, quizFinished]);\n\n  // Update leaderboard\n  const updateLeaderboard = () => {\n    setLeaderboard(prev => [\n      ...prev,\n      { topic, difficulty, score, timestamp: new Date().toISOString() }\n    ]);\n  };\n\n  const saveLeaderboard = async () => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    \n    if (!token || !username) {\n      console.warn(\"User not authenticated or missing username.\");\n      return;\n    }\n  \n    try {\n      const response = await fetch(\"http://localhost:5000/api/leaderboard/saveLeaderboard\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify({ username, topic, difficulty, score }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n  \n      console.log(\"Leaderboard entry saved successfully.\");\n      fetchLeaderboard();\n    } catch (error) {\n      console.error(\"Error saving leaderboard:\", error);\n    }\n  };\n  \n  const fetchLeaderboard = async () => {\n    const token = localStorage.getItem(\"token\");\n  \n    if (!token) {\n      console.warn(\"No authentication token found.\");\n      return;\n    }\n  \n    try {\n      const response = await fetch(\"http://localhost:5000/api/leaderboard/getLeaderboard\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n      });\n  \n      const data = await response.json();\n      if (Array.isArray(data.leaderboard)) {\n        setLeaderboard(data.leaderboard);\n      }\n    } catch (error) {\n      console.error(\"Error fetching leaderboard:\", error);\n      setLeaderboard([]);\n    }\n  };\n  \n  useEffect(() => {\n    fetchLeaderboard();\n  }, []);\n\n  // Progress calculation\n  const progress = quizData.length > 0 \n    ? ((currentQuestion + 1) / quizData.length) * 100\n    : 0;\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-b from-blue-50 to-purple-50 p-6 relative\">\n      {showConfetti && <Confetti recycle={false} numberOfPieces={400} />}\n\n      <motion.h1 \n        initial={{ y: -50, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        className=\"text-4xl font-bold mb-8 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\"\n      >\n        ðŸ’¡ CP Trivia & Quizzes ðŸ’¡\n      </motion.h1>\n\n      {/* Controls Section */}\n      <motion.div \n        className=\"w-full max-w-2xl bg-white rounded-xl shadow-lg p-6 mb-8\"\n        initial={{ scale: 0.95, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n      >\n        <div className=\"flex flex-wrap gap-4 justify-center\">\n          <div className=\"relative flex-1 min-w-[200px]\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Topic</label>\n            <select\n              className=\"w-full px-4 py-2 rounded-lg border border-gray-300 bg-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              value={topic}\n              onChange={(e) => setTopic(e.target.value)}\n            >\n              {topics.map((t) => (\n                <option key={t} value={t}>{t}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"relative flex-1 min-w-[150px]\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Difficulty</label>\n            <select\n              className=\"w-full px-4 py-2 rounded-lg border border-gray-300 bg-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              value={difficulty}\n              onChange={(e) => setDifficulty(e.target.value)}\n            >\n              {difficulties.map((d) => (\n                <option key={d} value={d}>{d}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"relative\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Questions</label>\n            <input\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              value={numQuestions}\n              onChange={(e) => setNumQuestions(e.target.value)}\n              className=\"w-24 px-4 py-2 rounded-lg border border-gray-300 bg-white text-center focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n        </div>\n\n        <motion.button \n          onClick={fetchTriviaData}\n          disabled={loading}\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          className=\"w-full mt-6 px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-500 text-white font-semibold rounded-lg shadow-md hover:shadow-lg transition-all\"\n        >\n          {loading ? (\n            <div className=\"flex items-center justify-center gap-2\">\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n              Generating Quiz...\n            </div>\n          ) : (\n            \"ðŸš€ Start Quiz!\"\n          )}\n        </motion.button>\n      </motion.div>\n\n      {/* Quiz Container */}\n      <AnimatePresence mode='wait'>\n        {!quizFinished && quizData.length > 0 && (\n          <motion.div\n            key={currentQuestion}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            className=\"w-full max-w-2xl bg-white rounded-xl shadow-lg p-8 mb-8\"\n          >\n            <div className=\"flex justify-between items-center mb-6\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"bg-blue-100 px-4 py-2 rounded-full\">\n                  <span className=\"font-bold text-blue-600\">Score: {score}</span>\n                </div>\n                <div className=\"bg-orange-100 px-4 py-2 rounded-full\">\n                  <span className=\"font-bold text-orange-600\">Attempts: {attemptsLeft}</span>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 text-red-500\">\n                <FaClock className=\"text-lg\" />\n                <span className=\"font-bold\">{timer}s</span>\n              </div>\n            </div>\n\n            <div className=\"h-2 bg-gray-200 rounded-full mb-6 overflow-hidden\">\n              <motion.div\n                className=\"h-full bg-gradient-to-r from-blue-500 to-purple-500\"\n                initial={{ width: 0 }}\n                animate={{ width: `${progress}%` }}\n                transition={{ duration: 0.5 }}\n              />\n            </div>\n\n            <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">\n              Question {currentQuestion + 1} of {quizData.length}\n            </h2>\n            <p className=\"text-lg text-gray-700 mb-8\">{quizData[currentQuestion].question}</p>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {quizData[currentQuestion].options.map((option, idx) => {\n                const isCorrect = option === quizData[currentQuestion].answer;\n                const isSelected = selectedAnswer === option;\n                \n                return (\n                  <motion.div\n                    key={idx}\n                    whileHover={{ scale: 1.03 }}\n                    whileTap={{ scale: 0.97 }}\n                    className={`p-4 rounded-xl cursor-pointer transition-all ${\n                      selectedAnswer\n                        ? isCorrect\n                          ? 'bg-green-100 border-2 border-green-500'\n                          : isSelected\n                            ? 'bg-red-100 border-2 border-red-500'\n                            : 'bg-gray-100 opacity-50'\n                        : 'bg-gray-100 hover:bg-gray-50'\n                    }`}\n                    onClick={() => handleAnswerClick(option)}\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      <span className={`text-lg font-semibold ${\n                        selectedAnswer\n                          ? isCorrect ? 'text-green-600' : isSelected ? 'text-red-600' : 'text-gray-400'\n                          : 'text-gray-700'\n                      }`}>\n                        {String.fromCharCode(65 + idx)}. {option}\n                      </span>\n                      {selectedAnswer && isSelected && (\n                        <motion.span\n                          initial={{ scale: 0 }}\n                          animate={{ scale: 1 }}\n                          className=\"ml-auto\"\n                        >\n                          {isCorrect ? (\n                            <FaRegSmileBeam className=\"text-2xl text-green-500\" />\n                          ) : (\n                            <FaRegSadTear className=\"text-2xl text-red-500\" />\n                          )}\n                        </motion.span>\n                      )}\n                    </div>\n                  </motion.div>\n                );\n              })}\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Leaderboard Section */}\n      <motion.div \n        className=\"w-full max-w-2xl bg-white rounded-xl shadow-lg p-6\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n      >\n        <div className=\"flex items-center gap-2 mb-4\">\n          <FaTrophy className=\"text-2xl text-yellow-500\" />\n          <h3 className=\"text-2xl font-bold text-gray-800\">Leaderboard</h3>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-4 py-3 text-left text-gray-600 font-semibold\">Rank</th>\n                <th className=\"px-4 py-3 text-left text-gray-600 font-semibold\">Topic</th>\n                <th className=\"px-4 py-3 text-left text-gray-600 font-semibold\">Difficulty</th>\n                <th className=\"px-4 py-3 text-left text-gray-600 font-semibold\">Score</th>\n              </tr>\n            </thead>\n            <tbody>\n              {leaderboard.sort((a, b) => b.score - a.score).map((entry, idx) => (\n                <motion.tr\n                  key={idx}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  className={`${idx % 2 === 0 ? 'bg-white' : 'bg-gray-50'}`}\n                >\n                  <td className=\"px-4 py-3\">\n                    <div className=\"flex items-center gap-2\">\n                      {idx === 0 && <FaStar className=\"text-yellow-400\" />}\n                      {idx + 1}\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-3 font-medium text-gray-700\">{entry.topic}</td>\n                  <td className=\"px-4 py-3\">\n                    <span className={`px-2 py-1 rounded-full text-sm ${\n                      entry.difficulty === 'Easy' ? 'bg-green-100 text-green-700' :\n                      entry.difficulty === 'Medium' ? 'bg-yellow-100 text-yellow-700' :\n                      'bg-red-100 text-red-700'\n                    }`}>\n                      {entry.difficulty}\n                    </span>\n                  </td>\n                  <td className=\"px-4 py-3 font-semibold text-blue-600\">{entry.score}</td>\n                </motion.tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default CPTrivia;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}