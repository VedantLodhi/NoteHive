{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anshi\\\\Desktop\\\\NoteHive-main\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n// import Dashboard1 from \"./components/Dashboard1\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import Notes from \"./pages/Notes\";\n// import Profile from \"./components/Profile\";\n// import Login from \"./pages/Login\";\n// import Register from \"./pages/Register\";\n// // import ProfileCreation from \"./components/ProfileCreation\";\n// import NoteDetails from \"./components/NoteDetails\";\n// import FAQ from \"./components/FAQ\";\n// import AdminPanel from \"./components/AdminPanel\";\n// import PrivateRoute from \"./components/PrivateRoute\";\n// import ProtectedRoute from \"./components/ProtectedRoute\";\n// import NoteManager from \"./pages/NoteManager\";\n// import CPTrivia from \"./pages/CPTrivia\";\n// const App = () => {\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n//   const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n//   const [notes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n//   useEffect(() => {\n//     const handleStorageChange = () => {\n//       setUsername(localStorage.getItem(\"username\") || null);\n//       setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n//     };\n\n//     handleStorageChange();\n//     window.addEventListener(\"storage\", handleStorageChange);\n\n//     return () => {\n//       window.removeEventListener(\"storage\", handleStorageChange);\n//     };\n//   }, []);\n\n//   return (\n//     <Router>\n//       <AppRoutes username={username} setUsername={setUsername} isAdmin={isAdmin} notes={notes} />\n//     </Router>\n//   );\n// };\n\n// const AppRoutes = ({ username, setUsername, isAdmin, notes }) => {\n//   const location = useLocation();\n\n//   return (\n//     <>\n\n//       <Routes>\n//         {/* Public Routes */}\n//         <Route path=\"/\" element={<Dashboard1 username={username} setUsername={setUsername} />}>\n//           <Route index element={<Home />} />\n//           <Route path=\"about\" element={<About />} />\n//           <Route path=\"notes\" element={<Notes notes={notes} />} />\n//           <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n//           <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n//           <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n//           <Route path=\"cp-trivia\" element={<CPTrivia/>}/>\n\n//         </Route>\n\n//         {/* Protected Routes (Requires Login) */}\n//         <Route element={<ProtectedRoute username={username} />}>\n//           <Route path=\"profile\" element={<Profile />} />\n//           {/* <Route path=\"create-profile\" element={<ProfileCreation />} /> */}\n//         </Route>\n\n//         {/* Admin Panel (No note management) */}\n//         <Route path=\"/admin\" element={<PrivateRoute><AdminPanel /></PrivateRoute>} />\n//         <Route path=\"/admin/noteManager\" element={<NoteManager />} />\n//         {/* Redirect unknown routes */}\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n\n//       {/* Show FAQ only on the Home page */}\n//       {location.pathname === \"/\" && <FAQ />}\n//     </>\n//   );\n// };\n\n// export default App;\n// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n// import Dashboard1 from \"./components/Dashboard1\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import Notes from \"./pages/Notes\";\n// import Profile from \"./components/Profile\";\n// import Login from \"./pages/Login\";\n// import Register from \"./pages/Register\";\n// // import ProfileCreation from \"./components/ProfileCreation\";\n// import NoteDetails from \"./components/NoteDetails\";\n// import FAQ from \"./components/FAQ\";\n// import AdminPanel from \"./components/AdminPanel\";\n// import PrivateRoute from \"./components/PrivateRoute\";\n// import ProtectedRoute from \"./components/ProtectedRoute\";\n// import NoteManager from \"./pages/NoteManager\";\n// import CPTrivia from \"./pages/CPTrivia\";\n// const App = () => {\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n//   const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n//   const [notes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n//   useEffect(() => {\n//     const handleStorageChange = () => {\n//       setUsername(localStorage.getItem(\"username\") || null);\n//       setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n//     };\n\n//     handleStorageChange();\n//     window.addEventListener(\"storage\", handleStorageChange);\n\n//     return () => {\n//       window.removeEventListener(\"storage\", handleStorageChange);\n//     };\n//   }, []);\n\n//   return (\n//     <Router>\n//       <AppRoutes username={username} setUsername={setUsername} isAdmin={isAdmin} notes={notes} />\n//     </Router>\n//   );\n// };\nconst AppRoutes = ({\n  username,\n  setUsername,\n  isAdmin,\n  notes\n}) => {\n  _s();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard1, {\n          username: username,\n          setUsername: setUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"notes\",\n          element: /*#__PURE__*/_jsxDEV(Notes, {\n            notes: notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"notes/:noteId\",\n          element: /*#__PURE__*/_jsxDEV(NoteDetails, {\n            notes: notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setUsername: setUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            setUsername: setUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"cp-trivia\",\n          element: /*#__PURE__*/_jsxDEV(CPTrivia, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          children: /*#__PURE__*/_jsxDEV(AdminPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/noteManager\",\n        element: /*#__PURE__*/_jsxDEV(NoteManager, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), location.pathname === \"/\" && /*#__PURE__*/_jsxDEV(FAQ, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true);\n};\n_s(AppRoutes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", true);\n_c = AppRoutes;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"AppRoutes\");","map":{"version":3,"names":["AppRoutes","username","setUsername","isAdmin","notes","_s","location","useLocation","_jsxDEV","_Fragment","children","Routes","Route","path","element","Dashboard1","fileName","_jsxFileName","lineNumber","columnNumber","index","Home","About","Notes","NoteDetails","Login","Register","CPTrivia","ProtectedRoute","Profile","PrivateRoute","AdminPanel","NoteManager","Navigate","to","pathname","FAQ","_c","App","$RefreshReg$"],"sources":["C:/Users/Anshi/Desktop/NoteHive-main/client/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n// import Dashboard1 from \"./components/Dashboard1\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import Notes from \"./pages/Notes\";\n// import Profile from \"./components/Profile\";\n// import Login from \"./pages/Login\";\n// import Register from \"./pages/Register\";\n// // import ProfileCreation from \"./components/ProfileCreation\";\n// import NoteDetails from \"./components/NoteDetails\";\n// import FAQ from \"./components/FAQ\";\n// import AdminPanel from \"./components/AdminPanel\";\n// import PrivateRoute from \"./components/PrivateRoute\";\n// import ProtectedRoute from \"./components/ProtectedRoute\";\n// import NoteManager from \"./pages/NoteManager\";\n// import CPTrivia from \"./pages/CPTrivia\";\n// const App = () => {\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n//   const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n//   const [notes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n//   useEffect(() => {\n//     const handleStorageChange = () => {\n//       setUsername(localStorage.getItem(\"username\") || null);\n//       setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n//     };\n  \n//     handleStorageChange();\n//     window.addEventListener(\"storage\", handleStorageChange);\n  \n//     return () => {\n//       window.removeEventListener(\"storage\", handleStorageChange);\n//     };\n//   }, []);\n\n//   return (\n//     <Router>\n//       <AppRoutes username={username} setUsername={setUsername} isAdmin={isAdmin} notes={notes} />\n//     </Router>\n//   );\n// };\n\n// const AppRoutes = ({ username, setUsername, isAdmin, notes }) => {\n//   const location = useLocation();\n\n//   return (\n//     <>\n    \n//       <Routes>\n//         {/* Public Routes */}\n//         <Route path=\"/\" element={<Dashboard1 username={username} setUsername={setUsername} />}>\n//           <Route index element={<Home />} />\n//           <Route path=\"about\" element={<About />} />\n//           <Route path=\"notes\" element={<Notes notes={notes} />} />\n//           <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n//           <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n//           <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n//           <Route path=\"cp-trivia\" element={<CPTrivia/>}/>\n\n//         </Route>\n\n//         {/* Protected Routes (Requires Login) */}\n//         <Route element={<ProtectedRoute username={username} />}>\n//           <Route path=\"profile\" element={<Profile />} />\n//           {/* <Route path=\"create-profile\" element={<ProfileCreation />} /> */}\n//         </Route>\n\n//         {/* Admin Panel (No note management) */}\n//         <Route path=\"/admin\" element={<PrivateRoute><AdminPanel /></PrivateRoute>} />\n//         <Route path=\"/admin/noteManager\" element={<NoteManager />} />\n//         {/* Redirect unknown routes */}\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n\n//       {/* Show FAQ only on the Home page */}\n//       {location.pathname === \"/\" && <FAQ />}\n//     </>\n//   );\n// };\n\n// export default App;\n// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n// import Dashboard1 from \"./components/Dashboard1\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import Notes from \"./pages/Notes\";\n// import Profile from \"./components/Profile\";\n// import Login from \"./pages/Login\";\n// import Register from \"./pages/Register\";\n// // import ProfileCreation from \"./components/ProfileCreation\";\n// import NoteDetails from \"./components/NoteDetails\";\n// import FAQ from \"./components/FAQ\";\n// import AdminPanel from \"./components/AdminPanel\";\n// import PrivateRoute from \"./components/PrivateRoute\";\n// import ProtectedRoute from \"./components/ProtectedRoute\";\n// import NoteManager from \"./pages/NoteManager\";\n// import CPTrivia from \"./pages/CPTrivia\";\n// const App = () => {\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n//   const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n//   const [notes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n//   useEffect(() => {\n//     const handleStorageChange = () => {\n//       setUsername(localStorage.getItem(\"username\") || null);\n//       setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n//     };\n  \n//     handleStorageChange();\n//     window.addEventListener(\"storage\", handleStorageChange);\n  \n//     return () => {\n//       window.removeEventListener(\"storage\", handleStorageChange);\n//     };\n//   }, []);\n\n//   return (\n//     <Router>\n//       <AppRoutes username={username} setUsername={setUsername} isAdmin={isAdmin} notes={notes} />\n//     </Router>\n//   );\n// };\nconst AppRoutes = ({ username, setUsername, isAdmin, notes }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <Routes>\n        {/* Public Routes */}\n        <Route path=\"/\" element={<Dashboard1 username={username} setUsername={setUsername} />}>\n          <Route index element={<Home />} />\n          <Route path=\"about\" element={<About />} />\n          <Route path=\"notes\" element={<Notes notes={notes} />} />\n          <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n          <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n          <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n          <Route path=\"cp-trivia\" element={<CPTrivia />} />\n        </Route>\n\n        {/* Protected Routes (Requires Login) */}\n        <Route element={<ProtectedRoute username={username} />}>\n          <Route path=\"profile\" element={<Profile />} />\n        </Route>\n\n        {/* Admin Panel (No note management) */}\n        <Route path=\"/admin\" element={<PrivateRoute><AdminPanel /></PrivateRoute>} />\n        <Route path=\"/admin/noteManager\" element={<NoteManager />} />\n\n        {/* Redirect unknown routes */}\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n\n      {/* Show FAQ only on the Home page */}\n      {location.pathname === \"/\" && <FAQ />}\n    </>\n  );\n};\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}