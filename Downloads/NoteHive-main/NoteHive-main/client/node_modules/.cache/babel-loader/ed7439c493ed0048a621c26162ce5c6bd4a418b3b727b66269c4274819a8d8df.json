{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { Link, Outlet, useNavigate } from \"react-router-dom\";\n// import { FaUserCircle, FaBars, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\n// import '../css/Dashboard.css';\n\n// const Dashboard1 = () => {\n//   const [menuOpen, setMenuOpen] = useState(false);\n//   const [darkMode, setDarkMode] = useState(() => localStorage.getItem(\"darkMode\") === \"true\");\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n//   const [role, setRole] = useState(\"\"); // Start with an empty role\n//   const [profilePic, setProfilePic] = useState(localStorage.getItem(\"profilePic\") || \"https://via.placeholder.com/150\");\n\n//   const navigate = useNavigate();\n\n//   // Get role when component mounts\n//   useEffect(() => {\n//     const storedRole = localStorage.getItem(\"role\")?.trim().toLowerCase();\n//     setRole(storedRole || \"\"); // Ensure a valid role is set\n//   }, []);\n\n//   // Sync dark mode state\n//   useEffect(() => {\n//     document.body.classList.toggle(\"dark-mode\", darkMode);\n//     localStorage.setItem(\"darkMode\", darkMode);\n//   }, [darkMode]);\n\n//   const toggleMenu = () => setMenuOpen(!menuOpen);\n//   const toggleDarkMode = () => setDarkMode((prev) => !prev);\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"username\");\n//     localStorage.removeItem(\"role\"); // Remove role\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"profilePic\"); // Clear profile picture\n//     setUsername(\"\");\n//     setRole(\"\"); // Clear role immediately\n//     setProfilePic(\"https://via.placeholder.com/150\"); // Reset profile picture to default\n//     navigate(\"/login\");\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div className={`dashboard-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n//       <header className=\"taskbar\">\n//         <div className=\"taskbar-logo\">\n//           <h1>NoteHive</h1>\n//         </div>\n\n//         <nav className={`taskbar-nav ${menuOpen ? \"open\" : \"\"}`}>\n//           <ul>\n//             <li><Link to=\"/\">Home</Link></li>\n//             <li><Link to=\"about\">About</Link></li>\n//             <li><Link to=\"notes\">Notes</Link></li>\n//             <li><Link to=\"cp-trivia\">Trivia & Quizzes</Link></li>\n\n//             {/* Only show Admin Panel for users with role \"admin\" */}\n//             {role === \"admin\" && (\n//               <>\n//                 <li><Link to=\"/admin\">Admin Panel</Link></li>\n//                 <li><Link to=\"/admin/noteManager\">Note Manager</Link></li>\n//               </>\n//             )}\n//             {username ? (\n//               <li className=\"profile-dropdown\">\n//                 <span className=\"profile-trigger\">\n//                   {/* Display profile picture or default icon */}\n//                   <img\n//                     src={profilePic} \n//                     alt=\"Profile\"\n//                     className=\"profile-icon\"\n//                     style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\n//                   />\n//                   {username}\n//                 </span>\n//                 <ul className=\"dropdown-menu\">\n//                   <li onClick={() => navigate(\"/profile\")}>Profile</li>\n//                   <li onClick={() => navigate(\"/settings\")}>Settings</li>\n//                   <li onClick={handleLogout}>Logout</li>\n//                 </ul>\n//               </li>\n//             ) : (\n//               <>\n//                 <li><Link to=\"login\">Login</Link></li>\n//                 <li><Link to=\"register\">Sign Up</Link></li>\n//               </>\n//             )}\n\n//             {/* Dark mode toggle */}\n//             <li className=\"dark-mode-toggle\" onClick={toggleDarkMode}>\n//               {darkMode ? <FaSun /> : <FaMoon />}\n//             </li>\n//           </ul>\n//         </nav>\n\n//         {/* Mobile menu toggle button */}\n//         <div className=\"menu-toggle\" onClick={toggleMenu}>\n//           {menuOpen ? <FaTimes /> : <FaBars />}\n//         </div>\n//       </header>\n\n//       <main className=\"main-content\">\n//         <Outlet />\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default Dashboard1;\n// import React, { useState, useEffect } from \"react\";\n// import { Link, Outlet, useNavigate } from \"react-router-dom\";\n// import {\n//   FaUserCircle,\n//   FaBars,\n//   FaTimes,\n//   FaMoon,\n//   FaSun,\n//   FaStickyNote,\n//   FaInfoCircle,\n//   FaPuzzlePiece,\n//   FaUsersCog,\n//   FaSignOutAlt,\n//   FaHome,\n// } from \"react-icons/fa\";\n//  // Keep your custom CSS if needed\n\n// const Dashboard1 = () => {\n//   const [menuOpen, setMenuOpen] = useState(false);\n//   const [darkMode, setDarkMode] = useState(() => localStorage.getItem(\"darkMode\") === \"true\");\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n//   const [role, setRole] = useState(\"\");\n//   const [profilePic, setProfilePic] = useState(localStorage.getItem(\"profilePic\") || \"https://via.placeholder.com/150\");\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const storedRole = localStorage.getItem(\"role\")?.trim().toLowerCase();\n//     setRole(storedRole || \"\");\n//   }, []);\n\n//   useEffect(() => {\n//     document.body.classList.toggle(\"dark\", darkMode);\n//     localStorage.setItem(\"darkMode\", darkMode);\n//   }, [darkMode]);\n\n//   const toggleMenu = () => setMenuOpen(!menuOpen);\n//   const toggleDarkMode = () => setDarkMode((prev) => !prev);\n\n//   const handleLogout = () => {\n//     localStorage.clear();\n//     setUsername(\"\");\n//     setRole(\"\");\n//     setProfilePic(\"https://via.placeholder.com/150\");\n//     navigate(\"/login\");\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div className={`flex h-screen ${darkMode ? \"dark bg-gray-900 text-white\" : \"bg-gray-100 text-gray-800\"}`}>\n//       {/* Sidebar */}\n//       <aside className={`w-64 bg-white dark:bg-gray-800 shadow-lg p-4 flex flex-col transition-transform duration-300 ease-in-out ${menuOpen ? \"translate-x-0\" : \"-translate-x-full\"} md:translate-x-0 fixed md:static z-40`}>\n//         <div className=\"flex items-center justify-between mb-6\">\n//           <h1 className=\"text-2xl font-bold text-purple-600\">NoteHive</h1>\n//           <button className=\"md:hidden\" onClick={toggleMenu}>\n//             <FaTimes size={20} />\n//           </button>\n//         </div>\n//         <nav className=\"flex flex-col space-y-4\">\n//           <Link to=\"/\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaHome /> Home</Link>\n//           <Link to=\"about\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaInfoCircle /> About</Link>\n//           <Link to=\"notes\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaStickyNote /> Notes</Link>\n//           <Link to=\"cp-trivia\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaPuzzlePiece /> Trivia</Link>\n\n//           {role === \"admin\" && (\n//             <>\n//               <Link to=\"/admin\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaUsersCog /> Admin Panel</Link>\n//               <Link to=\"/admin/noteManager\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaStickyNote /> Note Manager</Link>\n//             </>\n//           )}\n//         </nav>\n\n//         <div className=\"mt-auto pt-4 border-t border-gray-300 dark:border-gray-700\">\n//           {username ? (\n//             <div className=\"flex items-center gap-3\">\n//               <img src={profilePic} alt=\"profile\" className=\"w-10 h-10 rounded-full border-2 border-purple-500\" />\n//               <div>\n//                 <p className=\"font-semibold\">{username}</p>\n//                 <button onClick={handleLogout} className=\"text-sm text-red-500 hover:underline flex items-center gap-1\"><FaSignOutAlt /> Logout</button>\n//               </div>\n//             </div>\n//           ) : (\n//             <div className=\"flex flex-col space-y-2\">\n//               <Link to=\"login\" className=\"text-purple-600 hover:underline\">Login</Link>\n//               <Link to=\"register\" className=\"text-purple-600 hover:underline\">Sign Up</Link>\n//             </div>\n//           )}\n\n//           <button\n//             onClick={toggleDarkMode}\n//             className=\"mt-4 flex items-center gap-2 text-sm hover:text-purple-600 transition-colors\"\n//           >\n//             {darkMode ? <FaSun /> : <FaMoon />} {darkMode ? \"Light Mode\" : \"Dark Mode\"}\n//           </button>\n//         </div>\n//       </aside>\n\n//       {/* Page Content */}\n//       <div className=\"flex-1 overflow-y-auto p-6 md:ml-64 transition-all\">\n//         <div className=\"md:hidden mb-4\">\n//           <button onClick={toggleMenu} className=\"text-xl text-purple-600\">\n//             <FaBars />\n//           </button>\n//         </div>\n//         {/* <Outlet /> */}\n//         <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 flex items-center justify-center px-4 py-12\">\n//       <div className=\"bg-white shadow-xl rounded-2xl p-8 max-w-4xl w-full text-center animate-fade-in\">\n//         <h2 className=\"text-3xl font-bold text-gray-800 mb-4\">\n//           Welcome to Your Dashboard ðŸš€\n//         </h2>\n//         <p className=\"text-gray-600 mb-6 text-lg\">\n//           Your central hub for managing notes and user information.\n//         </p>\n\n//         {/* Image Section */}\n//         <div className=\"overflow-hidden rounded-lg shadow-lg mb-8\">\n//           <img\n//             src=\"https://images.unsplash.com/photo-1593642532842-98d0fd5ebc1a?w=800&q=80\"\n//             alt=\"Dashboard\"\n//             className=\"w-full object-cover hover:scale-105 transition-transform duration-300 ease-in-out\"\n//           />\n//         </div>\n\n//       </div>\n//     </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard1;","map":{"version":3,"names":[],"sources":["C:/Users/Anshi/Desktop/NoteHive-main/client/src/components/Dashboard1.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Link, Outlet, useNavigate } from \"react-router-dom\";\n// import { FaUserCircle, FaBars, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\n// import '../css/Dashboard.css';\n\n// const Dashboard1 = () => {\n//   const [menuOpen, setMenuOpen] = useState(false);\n//   const [darkMode, setDarkMode] = useState(() => localStorage.getItem(\"darkMode\") === \"true\");\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n//   const [role, setRole] = useState(\"\"); // Start with an empty role\n//   const [profilePic, setProfilePic] = useState(localStorage.getItem(\"profilePic\") || \"https://via.placeholder.com/150\");\n\n//   const navigate = useNavigate();\n\n//   // Get role when component mounts\n//   useEffect(() => {\n//     const storedRole = localStorage.getItem(\"role\")?.trim().toLowerCase();\n//     setRole(storedRole || \"\"); // Ensure a valid role is set\n//   }, []);\n\n//   // Sync dark mode state\n//   useEffect(() => {\n//     document.body.classList.toggle(\"dark-mode\", darkMode);\n//     localStorage.setItem(\"darkMode\", darkMode);\n//   }, [darkMode]);\n\n//   const toggleMenu = () => setMenuOpen(!menuOpen);\n//   const toggleDarkMode = () => setDarkMode((prev) => !prev);\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"username\");\n//     localStorage.removeItem(\"role\"); // Remove role\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"profilePic\"); // Clear profile picture\n//     setUsername(\"\");\n//     setRole(\"\"); // Clear role immediately\n//     setProfilePic(\"https://via.placeholder.com/150\"); // Reset profile picture to default\n//     navigate(\"/login\");\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div className={`dashboard-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n//       <header className=\"taskbar\">\n//         <div className=\"taskbar-logo\">\n//           <h1>NoteHive</h1>\n//         </div>\n\n//         <nav className={`taskbar-nav ${menuOpen ? \"open\" : \"\"}`}>\n//           <ul>\n//             <li><Link to=\"/\">Home</Link></li>\n//             <li><Link to=\"about\">About</Link></li>\n//             <li><Link to=\"notes\">Notes</Link></li>\n//             <li><Link to=\"cp-trivia\">Trivia & Quizzes</Link></li>\n\n//             {/* Only show Admin Panel for users with role \"admin\" */}\n//             {role === \"admin\" && (\n//               <>\n//                 <li><Link to=\"/admin\">Admin Panel</Link></li>\n//                 <li><Link to=\"/admin/noteManager\">Note Manager</Link></li>\n//               </>\n//             )}\n//             {username ? (\n//               <li className=\"profile-dropdown\">\n//                 <span className=\"profile-trigger\">\n//                   {/* Display profile picture or default icon */}\n//                   <img\n//                     src={profilePic} \n//                     alt=\"Profile\"\n//                     className=\"profile-icon\"\n//                     style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\n//                   />\n//                   {username}\n//                 </span>\n//                 <ul className=\"dropdown-menu\">\n//                   <li onClick={() => navigate(\"/profile\")}>Profile</li>\n//                   <li onClick={() => navigate(\"/settings\")}>Settings</li>\n//                   <li onClick={handleLogout}>Logout</li>\n//                 </ul>\n//               </li>\n//             ) : (\n//               <>\n//                 <li><Link to=\"login\">Login</Link></li>\n//                 <li><Link to=\"register\">Sign Up</Link></li>\n//               </>\n//             )}\n\n//             {/* Dark mode toggle */}\n//             <li className=\"dark-mode-toggle\" onClick={toggleDarkMode}>\n//               {darkMode ? <FaSun /> : <FaMoon />}\n//             </li>\n//           </ul>\n//         </nav>\n\n//         {/* Mobile menu toggle button */}\n//         <div className=\"menu-toggle\" onClick={toggleMenu}>\n//           {menuOpen ? <FaTimes /> : <FaBars />}\n//         </div>\n//       </header>\n\n//       <main className=\"main-content\">\n//         <Outlet />\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default Dashboard1;\n// import React, { useState, useEffect } from \"react\";\n// import { Link, Outlet, useNavigate } from \"react-router-dom\";\n// import {\n//   FaUserCircle,\n//   FaBars,\n//   FaTimes,\n//   FaMoon,\n//   FaSun,\n//   FaStickyNote,\n//   FaInfoCircle,\n//   FaPuzzlePiece,\n//   FaUsersCog,\n//   FaSignOutAlt,\n//   FaHome,\n// } from \"react-icons/fa\";\n//  // Keep your custom CSS if needed\n\n// const Dashboard1 = () => {\n//   const [menuOpen, setMenuOpen] = useState(false);\n//   const [darkMode, setDarkMode] = useState(() => localStorage.getItem(\"darkMode\") === \"true\");\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n//   const [role, setRole] = useState(\"\");\n//   const [profilePic, setProfilePic] = useState(localStorage.getItem(\"profilePic\") || \"https://via.placeholder.com/150\");\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const storedRole = localStorage.getItem(\"role\")?.trim().toLowerCase();\n//     setRole(storedRole || \"\");\n//   }, []);\n\n//   useEffect(() => {\n//     document.body.classList.toggle(\"dark\", darkMode);\n//     localStorage.setItem(\"darkMode\", darkMode);\n//   }, [darkMode]);\n\n//   const toggleMenu = () => setMenuOpen(!menuOpen);\n//   const toggleDarkMode = () => setDarkMode((prev) => !prev);\n\n//   const handleLogout = () => {\n//     localStorage.clear();\n//     setUsername(\"\");\n//     setRole(\"\");\n//     setProfilePic(\"https://via.placeholder.com/150\");\n//     navigate(\"/login\");\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div className={`flex h-screen ${darkMode ? \"dark bg-gray-900 text-white\" : \"bg-gray-100 text-gray-800\"}`}>\n//       {/* Sidebar */}\n//       <aside className={`w-64 bg-white dark:bg-gray-800 shadow-lg p-4 flex flex-col transition-transform duration-300 ease-in-out ${menuOpen ? \"translate-x-0\" : \"-translate-x-full\"} md:translate-x-0 fixed md:static z-40`}>\n//         <div className=\"flex items-center justify-between mb-6\">\n//           <h1 className=\"text-2xl font-bold text-purple-600\">NoteHive</h1>\n//           <button className=\"md:hidden\" onClick={toggleMenu}>\n//             <FaTimes size={20} />\n//           </button>\n//         </div>\n//         <nav className=\"flex flex-col space-y-4\">\n//           <Link to=\"/\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaHome /> Home</Link>\n//           <Link to=\"about\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaInfoCircle /> About</Link>\n//           <Link to=\"notes\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaStickyNote /> Notes</Link>\n//           <Link to=\"cp-trivia\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaPuzzlePiece /> Trivia</Link>\n\n//           {role === \"admin\" && (\n//             <>\n//               <Link to=\"/admin\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaUsersCog /> Admin Panel</Link>\n//               <Link to=\"/admin/noteManager\" className=\"hover:text-purple-600 flex items-center gap-2\"><FaStickyNote /> Note Manager</Link>\n//             </>\n//           )}\n//         </nav>\n\n//         <div className=\"mt-auto pt-4 border-t border-gray-300 dark:border-gray-700\">\n//           {username ? (\n//             <div className=\"flex items-center gap-3\">\n//               <img src={profilePic} alt=\"profile\" className=\"w-10 h-10 rounded-full border-2 border-purple-500\" />\n//               <div>\n//                 <p className=\"font-semibold\">{username}</p>\n//                 <button onClick={handleLogout} className=\"text-sm text-red-500 hover:underline flex items-center gap-1\"><FaSignOutAlt /> Logout</button>\n//               </div>\n//             </div>\n//           ) : (\n//             <div className=\"flex flex-col space-y-2\">\n//               <Link to=\"login\" className=\"text-purple-600 hover:underline\">Login</Link>\n//               <Link to=\"register\" className=\"text-purple-600 hover:underline\">Sign Up</Link>\n//             </div>\n//           )}\n\n//           <button\n//             onClick={toggleDarkMode}\n//             className=\"mt-4 flex items-center gap-2 text-sm hover:text-purple-600 transition-colors\"\n//           >\n//             {darkMode ? <FaSun /> : <FaMoon />} {darkMode ? \"Light Mode\" : \"Dark Mode\"}\n//           </button>\n//         </div>\n//       </aside>\n\n//       {/* Page Content */}\n//       <div className=\"flex-1 overflow-y-auto p-6 md:ml-64 transition-all\">\n//         <div className=\"md:hidden mb-4\">\n//           <button onClick={toggleMenu} className=\"text-xl text-purple-600\">\n//             <FaBars />\n//           </button>\n//         </div>\n//         {/* <Outlet /> */}\n//         <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 flex items-center justify-center px-4 py-12\">\n//       <div className=\"bg-white shadow-xl rounded-2xl p-8 max-w-4xl w-full text-center animate-fade-in\">\n//         <h2 className=\"text-3xl font-bold text-gray-800 mb-4\">\n//           Welcome to Your Dashboard ðŸš€\n//         </h2>\n//         <p className=\"text-gray-600 mb-6 text-lg\">\n//           Your central hub for managing notes and user information.\n//         </p>\n\n//         {/* Image Section */}\n//         <div className=\"overflow-hidden rounded-lg shadow-lg mb-8\">\n//           <img\n//             src=\"https://images.unsplash.com/photo-1593642532842-98d0fd5ebc1a?w=800&q=80\"\n//             alt=\"Dashboard\"\n//             className=\"w-full object-cover hover:scale-105 transition-transform duration-300 ease-in-out\"\n//           />\n//         </div>\n\n       \n//       </div>\n//     </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard1;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}