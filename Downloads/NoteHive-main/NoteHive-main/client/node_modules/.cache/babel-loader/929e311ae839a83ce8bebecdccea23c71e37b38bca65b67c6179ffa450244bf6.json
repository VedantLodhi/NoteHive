{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anshi\\\\Desktop\\\\NoteHive-main\\\\client\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import '../css/AdminPanel.css';  \n\n// const AdminPanel = () => {\n//   const navigate = useNavigate();\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [deletingUserId, setDeletingUserId] = useState(null); // Track which user is being deleted\n\n//   useEffect(() => {\n//     const userRole = localStorage.getItem(\"role\");\n//     const token = localStorage.getItem(\"token\");\n\n//     if (!userRole || userRole !== \"admin\" || !token) {\n//       navigate(\"/login\");\n//       return;\n//     }\n\n//     fetchUsers(token);\n//   }, [navigate]);\n\n//   // Fetch users\n//   const fetchUsers = async (token) => {\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/users\", {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       if (!response.ok) throw new Error(\"Failed to fetch users\");\n\n//       const data = await response.json();\n//       setUsers(data);\n//     } catch (error) {\n//       console.error(\"üö® Error fetching users:\", error.message);\n//       alert(\"Failed to load users. Please try again.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Change user role to admin\n//   const changeRole = async (userId) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n\n//       const response = await fetch(`http://localhost:5000/api/promote/${userId}`, {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\n//         body: JSON.stringify({ role: \"admin\" }),\n//       });\n\n//       if (!response.ok) throw new Error(\"Failed to update role\");\n\n//       fetchUsers(token); // Refresh user list after role change\n//       alert(\"User promoted to admin successfully.\");\n//     } catch (error) {\n//       console.error(\"Failed to update role:\", error.message);\n//       alert(`Failed to promote user: ${error.message}`);\n//     }\n//   };\n\n//   // Delete a user\n//   const deleteUser = async (userId, username, email) => {\n//     // Add confirmation prompt\n//     const confirmDelete = window.confirm(\n//       `Are you sure you want to delete user \"${username}\"? This action cannot be undone.`\n//     );\n//     if (!confirmDelete) return;\n\n//     setDeletingUserId(userId); // Set the user being deleted to show a loading state\n//     try {\n//       const token = localStorage.getItem(\"token\");\n\n//       if (!token) {\n//         console.error(\"‚ùå No token found. User might not be logged in.\");\n//         alert(\"Session expired. Please log in again.\");\n//         navigate(\"/login\");\n//         return;\n//       }\n\n//       console.log(`üîπ Sending DELETE request for user ID: ${userId}`);\n//       const response = await fetch(`http://localhost:5000/api/users/${userId}`, {\n//         method: \"DELETE\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ email }), // Include email in the request body\n//       });\n\n//       const data = await response.json();\n//       console.log(\"üîπ API Response:\", data);\n\n//       if (!response.ok) {\n//         throw new Error(data.message || \"Failed to delete user\");\n//       }\n\n//       console.log(\"‚úÖ User deleted successfully.\");\n//       alert(`User \"${username}\" deleted successfully.`);\n\n//       // Refresh user list after deletion\n//       await fetchUsers(token);\n//     } catch (error) {\n//       console.error(\"‚ùå Failed to delete user:\", error.message);\n//       alert(`Failed to delete user: ${error.message}`);\n//     } finally {\n//       setDeletingUserId(null); // Reset the deleting state\n//     }\n//   };\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>Admin Panel</h2>\n\n//       {/* User Management */}\n//       <h3>User Management</h3>\n//       <table border=\"1\">\n//         <thead>\n//           <tr>\n//             <th>Username</th>\n//             <th>Email</th>\n//             <th>Role</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user._id}>\n//               <td>{user.username}</td>\n//               <td>{user.email}</td>\n//               <td>{user.role}</td>\n//               <td>\n//                 {user.role !== \"admin\" && (\n//                   <button onClick={() => changeRole(user._id)}>Promote to Admin</button>\n//                 )}\n//                 <button\n//                   onClick={() => deleteUser(user._id, user.username, user.email)} // Pass email and username\n//                   style={{ marginLeft: \"10px\" }}\n//                   disabled={deletingUserId === user._id}\n//                 >\n//                   {deletingUserId === user._id ? \"Deleting...\" : \"Delete\"}\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default AdminPanel;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../css/AdminPanel.css\"; // Optional: if you want to keep any custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const navigate = useNavigate();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [deletingUserId, setDeletingUserId] = useState(null);\n  useEffect(() => {\n    const userRole = localStorage.getItem(\"role\");\n    const token = localStorage.getItem(\"token\");\n    if (!userRole || userRole !== \"admin\" || !token) {\n      navigate(\"/login\");\n      return;\n    }\n    fetchUsers(token);\n  }, [navigate]);\n  const fetchUsers = async token => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch users\");\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error(\"üö® Error fetching users:\", error.message);\n      alert(\"Failed to load users. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const changeRole = async userId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`http://localhost:5000/api/promote/${userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          role: \"admin\"\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to update role\");\n      fetchUsers(token);\n      alert(\"User promoted to admin successfully.\");\n    } catch (error) {\n      console.error(\"Failed to update role:\", error.message);\n      alert(`Failed to promote user: ${error.message}`);\n    }\n  };\n  const deleteUser = async (userId, username, email) => {\n    const confirmDelete = window.confirm(`Are you sure you want to delete user \"${username}\"? This action cannot be undone.`);\n    if (!confirmDelete) return;\n    setDeletingUserId(userId);\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`http://localhost:5000/api/users/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"Failed to delete user\");\n      }\n      alert(`User \"${username}\" deleted successfully.`);\n      await fetchUsers(token);\n    } catch (error) {\n      console.error(\"‚ùå Failed to delete user:\", error.message);\n      alert(`Failed to delete user: ${error.message}`);\n    } finally {\n      setDeletingUserId(null);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center mt-10\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-6xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-center mb-8\",\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Promote Users to Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto bg-white shadow rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-100 text-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4\",\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.filter(user => user.role !== \"admin\").map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-b hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: user.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => changeRole(user._id),\n                  className: \"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded\",\n                  children: \"Promote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Delete Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto bg-white shadow rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-100 text-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4\",\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-b hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: user.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteUser(user._id, user.username, user.email),\n                  className: \"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded\",\n                  disabled: deletingUserId === user._id,\n                  children: deletingUserId === user._id ? \"Deleting...\" : \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"XG6Sdsrel9n6gk52CPLGE9Gp6us=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","AdminPanel","_s","navigate","users","setUsers","loading","setLoading","deletingUserId","setDeletingUserId","userRole","localStorage","getItem","token","fetchUsers","response","fetch","headers","Authorization","ok","Error","data","json","error","console","message","alert","changeRole","userId","method","body","JSON","stringify","role","deleteUser","username","email","confirmDelete","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","user","map","onClick","_id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Anshi/Desktop/NoteHive-main/client/src/components/AdminPanel.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import '../css/AdminPanel.css';  \n\n// const AdminPanel = () => {\n//   const navigate = useNavigate();\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [deletingUserId, setDeletingUserId] = useState(null); // Track which user is being deleted\n\n//   useEffect(() => {\n//     const userRole = localStorage.getItem(\"role\");\n//     const token = localStorage.getItem(\"token\");\n\n//     if (!userRole || userRole !== \"admin\" || !token) {\n//       navigate(\"/login\");\n//       return;\n//     }\n\n//     fetchUsers(token);\n//   }, [navigate]);\n\n//   // Fetch users\n//   const fetchUsers = async (token) => {\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/users\", {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       if (!response.ok) throw new Error(\"Failed to fetch users\");\n\n//       const data = await response.json();\n//       setUsers(data);\n//     } catch (error) {\n//       console.error(\"üö® Error fetching users:\", error.message);\n//       alert(\"Failed to load users. Please try again.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Change user role to admin\n//   const changeRole = async (userId) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n\n//       const response = await fetch(`http://localhost:5000/api/promote/${userId}`, {\n//         method: \"PUT\",\n//         headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\n//         body: JSON.stringify({ role: \"admin\" }),\n//       });\n\n//       if (!response.ok) throw new Error(\"Failed to update role\");\n\n//       fetchUsers(token); // Refresh user list after role change\n//       alert(\"User promoted to admin successfully.\");\n//     } catch (error) {\n//       console.error(\"Failed to update role:\", error.message);\n//       alert(`Failed to promote user: ${error.message}`);\n//     }\n//   };\n\n//   // Delete a user\n//   const deleteUser = async (userId, username, email) => {\n//     // Add confirmation prompt\n//     const confirmDelete = window.confirm(\n//       `Are you sure you want to delete user \"${username}\"? This action cannot be undone.`\n//     );\n//     if (!confirmDelete) return;\n\n//     setDeletingUserId(userId); // Set the user being deleted to show a loading state\n//     try {\n//       const token = localStorage.getItem(\"token\");\n\n//       if (!token) {\n//         console.error(\"‚ùå No token found. User might not be logged in.\");\n//         alert(\"Session expired. Please log in again.\");\n//         navigate(\"/login\");\n//         return;\n//       }\n\n//       console.log(`üîπ Sending DELETE request for user ID: ${userId}`);\n//       const response = await fetch(`http://localhost:5000/api/users/${userId}`, {\n//         method: \"DELETE\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ email }), // Include email in the request body\n//       });\n\n//       const data = await response.json();\n//       console.log(\"üîπ API Response:\", data);\n\n//       if (!response.ok) {\n//         throw new Error(data.message || \"Failed to delete user\");\n//       }\n\n//       console.log(\"‚úÖ User deleted successfully.\");\n//       alert(`User \"${username}\" deleted successfully.`);\n\n//       // Refresh user list after deletion\n//       await fetchUsers(token);\n//     } catch (error) {\n//       console.error(\"‚ùå Failed to delete user:\", error.message);\n//       alert(`Failed to delete user: ${error.message}`);\n//     } finally {\n//       setDeletingUserId(null); // Reset the deleting state\n//     }\n//   };\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>Admin Panel</h2>\n\n//       {/* User Management */}\n//       <h3>User Management</h3>\n//       <table border=\"1\">\n//         <thead>\n//           <tr>\n//             <th>Username</th>\n//             <th>Email</th>\n//             <th>Role</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user._id}>\n//               <td>{user.username}</td>\n//               <td>{user.email}</td>\n//               <td>{user.role}</td>\n//               <td>\n//                 {user.role !== \"admin\" && (\n//                   <button onClick={() => changeRole(user._id)}>Promote to Admin</button>\n//                 )}\n//                 <button\n//                   onClick={() => deleteUser(user._id, user.username, user.email)} // Pass email and username\n//                   style={{ marginLeft: \"10px\" }}\n//                   disabled={deletingUserId === user._id}\n//                 >\n//                   {deletingUserId === user._id ? \"Deleting...\" : \"Delete\"}\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default AdminPanel;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../css/AdminPanel.css\"; // Optional: if you want to keep any custom CSS\n\nconst AdminPanel = () => {\n  const navigate = useNavigate();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [deletingUserId, setDeletingUserId] = useState(null);\n\n  useEffect(() => {\n    const userRole = localStorage.getItem(\"role\");\n    const token = localStorage.getItem(\"token\");\n\n    if (!userRole || userRole !== \"admin\" || !token) {\n      navigate(\"/login\");\n      return;\n    }\n\n    fetchUsers(token);\n  }, [navigate]);\n\n  const fetchUsers = async (token) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      if (!response.ok) throw new Error(\"Failed to fetch users\");\n\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error(\"üö® Error fetching users:\", error.message);\n      alert(\"Failed to load users. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const changeRole = async (userId) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      const response = await fetch(`http://localhost:5000/api/promote/${userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ role: \"admin\" }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to update role\");\n\n      fetchUsers(token);\n      alert(\"User promoted to admin successfully.\");\n    } catch (error) {\n      console.error(\"Failed to update role:\", error.message);\n      alert(`Failed to promote user: ${error.message}`);\n    }\n  };\n\n  const deleteUser = async (userId, username, email) => {\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete user \"${username}\"? This action cannot be undone.`\n    );\n    if (!confirmDelete) return;\n\n    setDeletingUserId(userId);\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      const response = await fetch(`http://localhost:5000/api/users/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Failed to delete user\");\n      }\n\n      alert(`User \"${username}\" deleted successfully.`);\n      await fetchUsers(token);\n    } catch (error) {\n      console.error(\"‚ùå Failed to delete user:\", error.message);\n      alert(`Failed to delete user: ${error.message}`);\n    } finally {\n      setDeletingUserId(null);\n    }\n  };\n\n  if (loading) return <p className=\"text-center mt-10\">Loading...</p>;\n\n  return (\n    <div className=\"p-6 max-w-6xl mx-auto\">\n      <h2 className=\"text-3xl font-bold text-center mb-8\">Admin Panel</h2>\n\n      {/* Promote to Admin Section */}\n      <div className=\"mb-10\">\n        <h3 className=\"text-2xl font-semibold mb-4\">Promote Users to Admin</h3>\n        <div className=\"overflow-x-auto bg-white shadow rounded-lg\">\n          <table className=\"min-w-full text-left\">\n            <thead className=\"bg-gray-100 text-gray-700\">\n              <tr>\n                <th className=\"py-3 px-4\">Username</th>\n                <th className=\"py-3 px-4\">Email</th>\n                <th className=\"py-3 px-4\">Role</th>\n                <th className=\"py-3 px-4\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users\n                .filter((user) => user.role !== \"admin\")\n                .map((user) => (\n                  <tr key={user._id} className=\"border-b hover:bg-gray-50\">\n                    <td className=\"py-3 px-4\">{user.username}</td>\n                    <td className=\"py-3 px-4\">{user.email}</td>\n                    <td className=\"py-3 px-4\">{user.role}</td>\n                    <td className=\"py-3 px-4\">\n                      <button\n                        onClick={() => changeRole(user._id)}\n                        className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded\"\n                      >\n                        Promote\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Delete Users Section */}\n      <div>\n        <h3 className=\"text-2xl font-semibold mb-4\">Delete Users</h3>\n        <div className=\"overflow-x-auto bg-white shadow rounded-lg\">\n          <table className=\"min-w-full text-left\">\n            <thead className=\"bg-gray-100 text-gray-700\">\n              <tr>\n                <th className=\"py-3 px-4\">Username</th>\n                <th className=\"py-3 px-4\">Email</th>\n                <th className=\"py-3 px-4\">Role</th>\n                <th className=\"py-3 px-4\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user) => (\n                <tr key={user._id} className=\"border-b hover:bg-gray-50\">\n                  <td className=\"py-3 px-4\">{user.username}</td>\n                  <td className=\"py-3 px-4\">{user.email}</td>\n                  <td className=\"py-3 px-4\">{user.role}</td>\n                  <td className=\"py-3 px-4\">\n                    <button\n                      onClick={() => deleteUser(user._id, user.username, user.email)}\n                      className=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded\"\n                      disabled={deletingUserId === user._id}\n                    >\n                      {deletingUserId === user._id ? \"Deleting...\" : \"Delete\"}\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}