{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anshi\\\\Desktop\\\\NoteHive-main\\\\client\\\\src\\\\pages\\\\CPTrivia.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FaClock, FaTrophy } from \"react-icons/fa\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CPTrivia = () => {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [attemptsLeft, setAttemptsLeft] = useState(2);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [timer, setTimer] = useState(60);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [topic, setTopic] = useState(\"Data Structures\");\n  const [difficulty, setDifficulty] = useState(\"Medium\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const topics = [\"React Js\", \"Node Js\", \"OOPS\", \"Operating System\", \"Computer Networks\", \"Linux\", \"Git\", \"DBMS\", \"System Design\", \"Data Structures\", \"Algorithms\"];\n  const difficulties = [\"Easy\", \"Medium\", \"Hard\"];\n\n  // Fetch trivia questions\n  const fetchTriviaData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/generateTrivia\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          topic,\n          difficulty,\n          numQuestions\n        })\n      });\n      const data = await response.json();\n      console.log(\"Received Data:\", data);\n      if (data.quizzes) {\n        setQuizData(data.quizzes);\n        setCurrentQuestion(0);\n        setScore(0);\n        setAttemptsLeft(2);\n        setQuizFinished(false);\n        setSelectedAnswer(null);\n        setTimer(60);\n      } else {\n        setQuizData([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching trivia:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Handle answer selection\n  const handleAnswerClick = option => {\n    if (selectedAnswer || attemptsLeft === 0) return;\n    if (option === quizData[currentQuestion].answer) {\n      // Correct Answer: Award points based on attempts\n      setScore(prevScore => prevScore + (attemptsLeft === 2 ? 10 : 5));\n      setSelectedAnswer(option);\n      setTimeout(() => nextQuestion(), 1000);\n    } else {\n      // Wrong Answer: Reduce attempts\n      setAttemptsLeft(prev => prev - 1);\n      setSelectedAnswer(option);\n      if (attemptsLeft === 2) {\n        // First Wrong Attempt: Reset selection after a delay\n        setTimeout(() => setSelectedAnswer(null), 1000);\n      } else {\n        // Second Wrong Attempt: Move to next question\n        setTimeout(() => nextQuestion(), 1000);\n      }\n    }\n  };\n\n  // Move to next question or finish quiz\n  const nextQuestion = () => {\n    if (currentQuestion + 1 < quizData.length) {\n      setCurrentQuestion(prev => prev + 1);\n      setAttemptsLeft(2);\n      setSelectedAnswer(null);\n      setTimer(60);\n    } else {\n      setQuizFinished(true);\n      updateLeaderboard();\n    }\n  };\n\n  // Timer logic\n  useEffect(() => {\n    if (quizFinished) return;\n    if (timer === 0) {\n      nextQuestion();\n      return;\n    }\n    const interval = setTimeout(() => setTimer(prev => prev - 1), 1000);\n    return () => clearTimeout(interval);\n  }, [timer, quizFinished]);\n\n  // Update leaderboard\n  const updateLeaderboard = () => {\n    setLeaderboard(prev => [...prev, {\n      topic,\n      difficulty,\n      score,\n      timestamp: new Date().toISOString()\n    }]);\n  };\n  const saveLeaderboard = async () => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\"); // Ensure username is stored\n\n    if (!token || !username) {\n      console.warn(\"User not authenticated or missing username.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/leaderboard/saveLeaderboard\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          username,\n          topic,\n          difficulty,\n          score\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n      console.log(\"Leaderboard entry saved successfully.\");\n      fetchLeaderboard(); // Refresh leaderboard after saving\n    } catch (error) {\n      console.error(\"Error saving leaderboard:\", error);\n    }\n  };\n  const fetchLeaderboard = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.warn(\"No authentication token found.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/leaderboard/getLeaderboard\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      console.log(\"Raw leaderboard data:\", data); // Log the response\n\n      // Ensure leaderboard is an array\n      if (!Array.isArray(data.leaderboard)) {\n        throw new Error(\"Invalid leaderboard data format\");\n      }\n      setLeaderboard(data.leaderboard);\n    } catch (error) {\n      console.error(\"Error fetching leaderboard:\", error);\n      setLeaderboard([]); // Ensure leaderboard remains an array\n    }\n  };\n  useEffect(() => {\n    fetchLeaderboard();\n  }, []); // Run only once when component loads\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-white p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4 animate-fade-in\",\n      children: \"\\uD83D\\uDCA1CP Trivia & Quizzes\\uD83D\\uDCA1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"px-4 py-2 bg-gray-700 rounded-md\",\n        value: topic,\n        onChange: e => setTopic(e.target.value),\n        children: topics.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t,\n          children: t\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"px-4 py-2 bg-gray-700 rounded-md\",\n        value: difficulty,\n        onChange: e => setDifficulty(e.target.value),\n        children: difficulties.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: d,\n          children: d\n        }, d, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        max: \"10\",\n        value: numQuestions,\n        onChange: e => setNumQuestions(e.target.value),\n        className: \"px-4 py-2 bg-gray-700 rounded-md text-center w-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTriviaData,\n      disabled: loading,\n      className: \"px-6 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-500 text-white font-semibold rounded-lg transition-transform transform hover:scale-105 active:scale-95 mb-6\",\n      children: loading ? \"Generating Quiz...\" : \"Generate Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), !quizFinished && quizData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-lg p-6 bg-gray-800 rounded-lg shadow-md animate-fade-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: [\"Question \", currentQuestion + 1, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg\",\n        children: quizData[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"mt-4 space-y-3\",\n        children: quizData[currentQuestion].options.map((option, idx) => /*#__PURE__*/_jsxDEV(motion.li, {\n          onClick: () => handleAnswerClick(option),\n          className: `p-3 rounded-lg cursor-pointer transition duration-300 ${selectedAnswer === option ? option === quizData[currentQuestion].answer ? \"bg-green-500\" : \"bg-red-500\" : \"bg-gray-700 hover:bg-gray-600\"}`,\n          whileTap: {\n            scale: 0.95\n          },\n          children: option\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-300\",\n          children: [\"Attempts Left: \", attemptsLeft]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-red-400 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(FaClock, {\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), \" Time Left: \", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-lg mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(FaTrophy, {\n          className: \"mr-2 text-yellow-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), \" Leaderboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full bg-gray-800 text-white rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2\",\n              children: \"Topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2\",\n              children: \"Difficulty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2\",\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Array.isArray(leaderboard) && leaderboard.length > 0 ? leaderboard.sort((a, b) => b.score - a.score).map((entry, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"text-center border-b border-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2\",\n              children: idx + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2\",\n              children: entry.topic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2\",\n              children: entry.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2\",\n              children: entry.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 9\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 7\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              className: \"p-4 text-center text-gray-400\",\n              children: \"No leaderboard data available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(CPTrivia, \"EXH2xR7ncXlmfKPFruhOllqTLQ4=\");\n_c = CPTrivia;\nexport default CPTrivia;\nvar _c;\n$RefreshReg$(_c, \"CPTrivia\");","map":{"version":3,"names":["React","useState","useEffect","FaClock","FaTrophy","motion","jsxDEV","_jsxDEV","CPTrivia","_s","quizData","setQuizData","currentQuestion","setCurrentQuestion","score","setScore","attemptsLeft","setAttemptsLeft","selectedAnswer","setSelectedAnswer","quizFinished","setQuizFinished","loading","setLoading","timer","setTimer","leaderboard","setLeaderboard","topic","setTopic","difficulty","setDifficulty","numQuestions","setNumQuestions","topics","difficulties","fetchTriviaData","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","quizzes","error","handleAnswerClick","option","answer","prevScore","setTimeout","nextQuestion","prev","length","updateLeaderboard","interval","clearTimeout","timestamp","Date","toISOString","saveLeaderboard","token","localStorage","getItem","username","warn","ok","Error","status","statusText","fetchLeaderboard","Array","isArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","t","d","type","min","max","onClick","disabled","question","options","idx","li","whileTap","scale","sort","a","b","entry","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Anshi/Desktop/NoteHive-main/client/src/pages/CPTrivia.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FaClock, FaTrophy } from \"react-icons/fa\";\nimport { motion } from \"framer-motion\";\n\nconst CPTrivia = () => {\n  const [quizData, setQuizData] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [attemptsLeft, setAttemptsLeft] = useState(2);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [timer, setTimer] = useState(60);\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  const [topic, setTopic] = useState(\"Data Structures\");\n  const [difficulty, setDifficulty] = useState(\"Medium\");\n  const [numQuestions, setNumQuestions] = useState(5);\n\n  const topics = [\n    \"React Js\", \"Node Js\",\n    \"OOPS\", \"Operating System\", \"Computer Networks\",\"Linux\",\"Git\",\n    \"DBMS\", \"System Design\", \"Data Structures\", \"Algorithms\"\n  ];\n\n  const difficulties = [\"Easy\", \"Medium\", \"Hard\"];\n\n  // Fetch trivia questions\n  const fetchTriviaData = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/generateTrivia\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ topic, difficulty, numQuestions }),\n      });\n\n      const data = await response.json();\n      console.log(\"Received Data:\", data);\n\n      if (data.quizzes) {\n        setQuizData(data.quizzes);\n        setCurrentQuestion(0);\n        setScore(0);\n        setAttemptsLeft(2);\n        setQuizFinished(false);\n        setSelectedAnswer(null);\n        setTimer(60);\n      } else {\n        setQuizData([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching trivia:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Handle answer selection\n  const handleAnswerClick = (option) => {\n    if (selectedAnswer || attemptsLeft === 0) return;\n  \n    if (option === quizData[currentQuestion].answer) {\n      // Correct Answer: Award points based on attempts\n      setScore((prevScore) => prevScore + (attemptsLeft === 2 ? 10 : 5));\n      setSelectedAnswer(option);\n      setTimeout(() => nextQuestion(), 1000);\n    } else {\n      // Wrong Answer: Reduce attempts\n      setAttemptsLeft((prev) => prev - 1);\n      setSelectedAnswer(option);\n  \n      if (attemptsLeft === 2) {\n        // First Wrong Attempt: Reset selection after a delay\n        setTimeout(() => setSelectedAnswer(null), 1000);\n      } else {\n        // Second Wrong Attempt: Move to next question\n        setTimeout(() => nextQuestion(), 1000);\n      }\n    }\n  };\n  \n\n  // Move to next question or finish quiz\n  const nextQuestion = () => {\n    if (currentQuestion + 1 < quizData.length) {\n      setCurrentQuestion((prev) => prev + 1);\n      setAttemptsLeft(2);\n      setSelectedAnswer(null);\n      setTimer(60);\n    } else {\n      setQuizFinished(true);\n      updateLeaderboard();\n    }\n  };\n\n  // Timer logic\n  useEffect(() => {\n    if (quizFinished) return;\n    if (timer === 0) {\n      nextQuestion();\n      return;\n    }\n\n    const interval = setTimeout(() => setTimer((prev) => prev - 1), 1000);\n    return () => clearTimeout(interval);\n  }, [timer, quizFinished]);\n\n  // Update leaderboard\n  const updateLeaderboard = () => {\n    setLeaderboard((prev) => [\n      ...prev,\n      { topic, difficulty, score, timestamp: new Date().toISOString() }\n    ]);\n  };\n\n  const saveLeaderboard = async () => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\"); // Ensure username is stored\n    \n    if (!token || !username) {\n      console.warn(\"User not authenticated or missing username.\");\n      return;\n    }\n  \n    try {\n      const response = await fetch(\"http://localhost:5000/api/leaderboard/saveLeaderboard\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify({ username, topic, difficulty, score }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n  \n      console.log(\"Leaderboard entry saved successfully.\");\n      fetchLeaderboard(); // Refresh leaderboard after saving\n    } catch (error) {\n      console.error(\"Error saving leaderboard:\", error);\n    }\n  };\n  \n  const fetchLeaderboard = async () => {\n    const token = localStorage.getItem(\"token\");\n  \n    if (!token) {\n      console.warn(\"No authentication token found.\");\n      return;\n    }\n  \n    try {\n      const response = await fetch(\"http://localhost:5000/api/leaderboard/getLeaderboard\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n      });\n  \n      const data = await response.json();\n      console.log(\"Raw leaderboard data:\", data); // Log the response\n  \n      // Ensure leaderboard is an array\n      if (!Array.isArray(data.leaderboard)) {\n        throw new Error(\"Invalid leaderboard data format\");\n      }\n  \n      setLeaderboard(data.leaderboard);\n    } catch (error) {\n      console.error(\"Error fetching leaderboard:\", error);\n      setLeaderboard([]); // Ensure leaderboard remains an array\n    }\n  };\n  \n  useEffect(() => {\n    fetchLeaderboard();\n  }, []); // Run only once when component loads\n  \n  \n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-white p-6\">\n      <h1 className=\"text-3xl font-bold mb-4 animate-fade-in\">\n      💡CP Trivia & Quizzes💡\n      </h1>\n\n      {/* Topic & Difficulty Selection */}\n      <div className=\"flex flex-wrap gap-4 mb-4\">\n        <select className=\"px-4 py-2 bg-gray-700 rounded-md\" value={topic} onChange={(e) => setTopic(e.target.value)}>\n          {topics.map((t) => <option key={t} value={t}>{t}</option>)}\n        </select>\n\n        <select className=\"px-4 py-2 bg-gray-700 rounded-md\" value={difficulty} onChange={(e) => setDifficulty(e.target.value)}>\n          {difficulties.map((d) => <option key={d} value={d}>{d}</option>)}\n        </select>\n\n        <input type=\"number\" min=\"1\" max=\"10\" value={numQuestions} onChange={(e) => setNumQuestions(e.target.value)}\n          className=\"px-4 py-2 bg-gray-700 rounded-md text-center w-20\" />\n      </div>\n\n      {/* Generate Quiz Button */}\n      <button onClick={fetchTriviaData} disabled={loading}\n        className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-500 text-white font-semibold rounded-lg transition-transform transform hover:scale-105 active:scale-95 mb-6\">\n        {loading ? \"Generating Quiz...\" : \"Generate Quiz\"}\n      </button>\n\n      {/* Quiz Container */}\n      {!quizFinished && quizData.length > 0 && (\n        <div className=\"w-full max-w-lg p-6 bg-gray-800 rounded-lg shadow-md animate-fade-in\">\n          <h2 className=\"text-xl font-semibold mb-4\">\n            Question {currentQuestion + 1}:\n          </h2>\n          <p className=\"text-lg\">{quizData[currentQuestion].question}</p>\n\n          <ul className=\"mt-4 space-y-3\">\n            {quizData[currentQuestion].options.map((option, idx) => (\n              <motion.li\n                key={idx}\n                onClick={() => handleAnswerClick(option)}\n                className={`p-3 rounded-lg cursor-pointer transition duration-300 ${\n                  selectedAnswer === option \n                    ? option === quizData[currentQuestion].answer\n                      ? \"bg-green-500\"\n                      : \"bg-red-500\"\n                    : \"bg-gray-700 hover:bg-gray-600\"\n                }`}\n                whileTap={{ scale: 0.95 }}\n              >\n                {option}\n              </motion.li>\n            ))}\n          </ul>\n\n          <div className=\"flex justify-between mt-4\">\n            <p className=\"text-sm text-gray-300\">Attempts Left: {attemptsLeft}</p>\n            <p className=\"text-sm text-red-400 flex items-center\">\n              <FaClock className=\"mr-1\" /> Time Left: {timer}s\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Leaderboard */}\n      <div className=\"w-full max-w-lg mt-6\">\n        <h3 className=\"text-xl font-bold mb-2 flex items-center\">\n          <FaTrophy className=\"mr-2 text-yellow-400\" /> Leaderboard\n        </h3>\n        <table className=\"w-full bg-gray-800 text-white rounded-lg\">\n          <thead>\n            <tr className=\"bg-gray-700\">\n              <th className=\"p-2\">#</th>\n              <th className=\"p-2\">Topic</th>\n              <th className=\"p-2\">Difficulty</th>\n              <th className=\"p-2\">Score</th>\n            </tr>\n          </thead>\n          <tbody>\n  {Array.isArray(leaderboard) && leaderboard.length > 0 ? (\n    leaderboard.sort((a, b) => b.score - a.score).map((entry, idx) => (\n      <tr key={idx} className=\"text-center border-b border-gray-600\">\n        <td className=\"p-2\">{idx + 1}</td>\n        <td className=\"p-2\">{entry.topic}</td>\n        <td className=\"p-2\">{entry.difficulty}</td>\n        <td className=\"p-2\">{entry.score}</td>\n      </tr>\n    ))\n  ) : (\n    <tr>\n      <td colSpan=\"4\" className=\"p-4 text-center text-gray-400\">\n        No leaderboard data available.\n      </td>\n    </tr>\n  )}\n</tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default CPTrivia;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}