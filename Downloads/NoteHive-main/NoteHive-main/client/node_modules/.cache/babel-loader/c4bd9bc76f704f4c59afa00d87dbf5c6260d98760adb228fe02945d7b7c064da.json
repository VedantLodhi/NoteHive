{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anshi\\\\Desktop\\\\NoteHive-main\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n// import Dashboard1 from \"./components/Dashboard1\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import Notes from \"./pages/Notes\";\n// import Profile from \"./components/Profile\";\n// import Login from \"./pages/Login\";\n// import Register from \"./pages/Register\";\n// // import ProfileCreation from \"./components/ProfileCreation\";\n// import NoteDetails from \"./components/NoteDetails\";\n// import FAQ from \"./components/FAQ\";\n// import AdminPanel from \"./components/AdminPanel\";\n// import PrivateRoute from \"./components/PrivateRoute\";\n// import ProtectedRoute from \"./components/ProtectedRoute\";\n// import NoteManager from \"./pages/NoteManager\";\n// import CPTrivia from \"./pages/CPTrivia\";\n// const App = () => {\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n//   const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n//   const [notes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n//   useEffect(() => {\n//     const handleStorageChange = () => {\n//       setUsername(localStorage.getItem(\"username\") || null);\n//       setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n//     };\n\n//     handleStorageChange();\n//     window.addEventListener(\"storage\", handleStorageChange);\n\n//     return () => {\n//       window.removeEventListener(\"storage\", handleStorageChange);\n//     };\n//   }, []);\n\n//   return (\n//     <Router>\n//       <AppRoutes username={username} setUsername={setUsername} isAdmin={isAdmin} notes={notes} />\n//     </Router>\n//   );\n// };\n\n// const AppRoutes = ({ username, setUsername, isAdmin, notes }) => {\n//   const location = useLocation();\n\n//   return (\n//     <>\n//       <Routes>\n//         {/* Public Routes */}\n//         <Route path=\"/\" element={<Dashboard1 username={username} setUsername={setUsername} />}>\n//           <Route index element={<Home />} />\n//           <Route path=\"about\" element={<About />} />\n//           <Route path=\"notes\" element={<Notes notes={notes} />} />\n//           <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n//           <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n//           <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n//           <Route path=\"cp-trivia\" element={<CPTrivia/>}/>\n\n//         </Route>\n\n//         {/* Protected Routes (Requires Login) */}\n//         <Route element={<ProtectedRoute username={username} />}>\n//           <Route path=\"profile\" element={<Profile />} />\n//           {/* <Route path=\"create-profile\" element={<ProfileCreation />} /> */}\n//         </Route>\n\n//         {/* Admin Panel (No note management) */}\n//         <Route path=\"/admin\" element={<PrivateRoute><AdminPanel /></PrivateRoute>} />\n//         <Route path=\"/admin/noteManager\" element={<NoteManager />} />\n//         {/* Redirect unknown routes */}\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n\n//       {/* Show FAQ only on the Home page */}\n//       {location.pathname === \"/\" && <FAQ />}\n//     </>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\nimport Dashboard1 from \"./components/Dashboard1\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Notes from \"./pages/Notes\";\nimport Profile from \"./components/Profile\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport NoteDetails from \"./components/NoteDetails\";\nimport FAQ from \"./components/FAQ\";\nimport AdminPanel from \"./components/AdminPanel\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport NoteManager from \"./pages/NoteManager\";\nimport CPTrivia from \"./pages/CPTrivia\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n  const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n  const [notes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setUsername(localStorage.getItem(\"username\") || null);\n      setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n    };\n    handleStorageChange();\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AppRoutes, {\n      username: username,\n      setUsername: setUsername,\n      isAdmin: isAdmin,\n      notes: notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PosFZe5AUd0ssZ2qELqjs6xP/NA=\");\n_c = App;\nconst AppRoutes = ({\n  username,\n  setUsername,\n  isAdmin,\n  notes\n}) => {\n  _s2();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard1, {\n          username: username,\n          setUsername: setUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 20\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"notes\",\n          element: /*#__PURE__*/_jsxDEV(Notes, {\n            notes: notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"notes/:noteId\",\n          element: /*#__PURE__*/_jsxDEV(NoteDetails, {\n            notes: notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setUsername: setUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            setUsername: setUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"cp-trivia\",\n          element: /*#__PURE__*/_jsxDEV(CPTrivia, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          isAdmin: isAdmin,\n          children: /*#__PURE__*/_jsxDEV(AdminPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/noteManager\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          isAdmin: isAdmin,\n          children: /*#__PURE__*/_jsxDEV(NoteManager, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), location.pathname === \"/\" && /*#__PURE__*/_jsxDEV(FAQ, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true);\n};\n_s2(AppRoutes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c2 = AppRoutes;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppRoutes\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useLocation","Navigate","Dashboard1","Home","About","Notes","Profile","Login","Register","NoteDetails","FAQ","AdminPanel","PrivateRoute","ProtectedRoute","NoteManager","CPTrivia","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","localStorage","getItem","isAdmin","setIsAdmin","notes","JSON","parse","handleStorageChange","window","addEventListener","removeEventListener","children","AppRoutes","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","location","path","element","index","to","replace","pathname","_c2","$RefreshReg$"],"sources":["C:/Users/Anshi/Desktop/NoteHive-main/client/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\n// import Dashboard1 from \"./components/Dashboard1\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import Notes from \"./pages/Notes\";\n// import Profile from \"./components/Profile\";\n// import Login from \"./pages/Login\";\n// import Register from \"./pages/Register\";\n// // import ProfileCreation from \"./components/ProfileCreation\";\n// import NoteDetails from \"./components/NoteDetails\";\n// import FAQ from \"./components/FAQ\";\n// import AdminPanel from \"./components/AdminPanel\";\n// import PrivateRoute from \"./components/PrivateRoute\";\n// import ProtectedRoute from \"./components/ProtectedRoute\";\n// import NoteManager from \"./pages/NoteManager\";\n// import CPTrivia from \"./pages/CPTrivia\";\n// const App = () => {\n//   const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n//   const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n//   const [notes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n//   useEffect(() => {\n//     const handleStorageChange = () => {\n//       setUsername(localStorage.getItem(\"username\") || null);\n//       setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n//     };\n  \n//     handleStorageChange();\n//     window.addEventListener(\"storage\", handleStorageChange);\n  \n//     return () => {\n//       window.removeEventListener(\"storage\", handleStorageChange);\n//     };\n//   }, []);\n\n//   return (\n//     <Router>\n//       <AppRoutes username={username} setUsername={setUsername} isAdmin={isAdmin} notes={notes} />\n//     </Router>\n//   );\n// };\n\n// const AppRoutes = ({ username, setUsername, isAdmin, notes }) => {\n//   const location = useLocation();\n\n//   return (\n//     <>\n//       <Routes>\n//         {/* Public Routes */}\n//         <Route path=\"/\" element={<Dashboard1 username={username} setUsername={setUsername} />}>\n//           <Route index element={<Home />} />\n//           <Route path=\"about\" element={<About />} />\n//           <Route path=\"notes\" element={<Notes notes={notes} />} />\n//           <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n//           <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n//           <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n//           <Route path=\"cp-trivia\" element={<CPTrivia/>}/>\n\n//         </Route>\n\n//         {/* Protected Routes (Requires Login) */}\n//         <Route element={<ProtectedRoute username={username} />}>\n//           <Route path=\"profile\" element={<Profile />} />\n//           {/* <Route path=\"create-profile\" element={<ProfileCreation />} /> */}\n//         </Route>\n\n//         {/* Admin Panel (No note management) */}\n//         <Route path=\"/admin\" element={<PrivateRoute><AdminPanel /></PrivateRoute>} />\n//         <Route path=\"/admin/noteManager\" element={<NoteManager />} />\n//         {/* Redirect unknown routes */}\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n\n//       {/* Show FAQ only on the Home page */}\n//       {location.pathname === \"/\" && <FAQ />}\n//     </>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\nimport Dashboard1 from \"./components/Dashboard1\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Notes from \"./pages/Notes\";\nimport Profile from \"./components/Profile\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport NoteDetails from \"./components/NoteDetails\";\nimport FAQ from \"./components/FAQ\";\nimport AdminPanel from \"./components/AdminPanel\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport NoteManager from \"./pages/NoteManager\";\nimport CPTrivia from \"./pages/CPTrivia\";\n\nconst App = () => {\n  const [username, setUsername] = useState(localStorage.getItem(\"username\") || null);\n  const [isAdmin, setIsAdmin] = useState(localStorage.getItem(\"isAdmin\") === \"true\");\n  const [notes] = useState(JSON.parse(localStorage.getItem(\"notes\")) || []);\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setUsername(localStorage.getItem(\"username\") || null);\n      setIsAdmin(localStorage.getItem(\"isAdmin\") === \"true\");\n    };\n\n    handleStorageChange();\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, []);\n\n  return (\n    <Router>\n      <AppRoutes\n        username={username}\n        setUsername={setUsername}\n        isAdmin={isAdmin}\n        notes={notes}\n      />\n    </Router>\n  );\n};\n\nconst AppRoutes = ({ username, setUsername, isAdmin, notes }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <Routes>\n        {/* Public and Nested Routes inside Dashboard */}\n        <Route\n          path=\"/\"\n          element={<Dashboard1 username={username} setUsername={setUsername} />}\n        >\n          <Route index element={<Home />} />\n          <Route path=\"about\" element={<About />} />\n          <Route path=\"notes\" element={<Notes notes={notes} />} />\n          <Route path=\"notes/:noteId\" element={<NoteDetails notes={notes} />} />\n          <Route path=\"login\" element={<Login setUsername={setUsername} />} />\n          <Route path=\"register\" element={<Register setUsername={setUsername} />} />\n          <Route path=\"cp-trivia\" element={<CPTrivia />} />\n        </Route>\n\n        {/* Protected Routes (Requires Login) */}\n        <Route element={<ProtectedRoute username={username} />}>\n          <Route path=\"/profile\" element={<Profile />} />\n          {/* <Route path=\"/create-profile\" element={<ProfileCreation />} /> */}\n        </Route>\n\n        {/* Admin Panel Routes (Requires Admin) */}\n        <Route\n          path=\"/admin\"\n          element={<PrivateRoute isAdmin={isAdmin}><AdminPanel /></PrivateRoute>}\n        />\n        <Route\n          path=\"/admin/noteManager\"\n          element={<PrivateRoute isAdmin={isAdmin}><NoteManager /></PrivateRoute>}\n        />\n\n        {/* Catch-All Redirect */}\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n\n      {/* Conditional FAQ */}\n      {location.pathname === \"/\" && <FAQ />}\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}